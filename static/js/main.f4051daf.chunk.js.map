{"version":3,"sources":["Database.js","components/Header.js","components/Registro/RegistroComponent.js","models/Record.js","models/Publicador.js","models/Publico.js","models/Medio.js","components/Modals/ModalManage.js","components/Modals/ModalLista.js","components/Modals/ModalIngresar.js","components/Registro/RegistroBody.js","components/Modals/ModalImportDB.js","components/Modals/ModalHistorial.js","Utils.js","components/Otros/ChartLabel.js","components/Modals/ModalEstadisticas.js","components/Registro/RegistroHeader.js","components/Registro/RegistroContainer.js","components/Modals/ModalLogin.js","App.js","serviceWorker.js","index.js"],"names":["currentDatabase","Header","className","icon","Database","callback","initSqlJs","then","SQL","online","url","token","response","database","window","localStorage","getItem","createDatabase","db","toBinArray","run","server","this","setItem","testOnlineConnection","axios","get","headers","status","route","data","Notiflix","Report","Failure","post","delete","buildInitialTables","insertInitialData","saveExistingDatabase","files","f","r","FileReader","onload","Uints","Uint8Array","result","readAsArrayBuffer","command","toBinString","export","arraybuff","blob","Blob","a","document","createElement","body","appendChild","href","URL","createObjectURL","date","Date","year","getFullYear","month","getMonth","day","getDate","fecha","download","onclick","setTimeout","revokeObjectURL","click","table","id","stmt","prepare","getAsObject","step","console","log","free","sql","rows","push","arr","uarr","strings","i","length","String","fromCharCode","apply","subarray","join","str","l","charCodeAt","RegistroComponent","style","marginTop","props","children","React","Component","Record","hora","publicador","medio","publico","textos","video","publicacion","tipo","copias","isOnline","deleteInformation","executeCommand","postInformation","publicacionAdjunta","videoAdjunto","copies","results","idRecord","hours","getHours","minutes","getMinutes","seconds","getSeconds","getLastInsertedId","getInformation","exec","lastResults","forEach","item","hora_year","hora_month","hora_day","hora_hour","hora_minute","hora_second","stats","publicos","map","title","value","cartas","color","statsMedio","medios","publicadores","revisitas","porPublicador","Publicador","nombre","grupo","invitado","isInvitado","idPublicador","allPublicadores","label","Publico","idPublico","allPublicos","Medio","idMedio","getAllMedios","allMedios","ModalManage","forwardRef","ref","useState","show","setShow","useImperativeHandle","handleModalOpen","event","Modal","onHide","closeButton","Title","Body","allElements","key","onClick","deleteFunction","customStyles","menu","provided","state","backgroundColor","zIndex","option","isFocused","input","control","background","borderColor","singleValue","ModalLista","lista","setLista","history","setHistory","handleModalClose","addGuest","prompt","undefined","trim","Loading","Arrows","insert","newObject","refreshData","Notify","Success","updateListaEspera","refreshServerLista","Remove","updateServerLista","newLista","publisher","newState","obj","list","containsObject","checkParticipacion","nobodyParticipated","splice","indexOf","deleteElement","Form","Group","as","Row","Label","column","sm","Col","InputGroup","options","styles","name","onChange","Append","Button","variant","paddingTop","index","replacePublicador","modifyCurrentName","ModalIngresar","campos","fields","field","default","setFields","handleChange","target","type","prevState","checked","Control","preventDefault","submitFunction","RegistroBody","showModalIngresarPublicador","setShowModalIngresarPublicador","showModalIngresarMedio","setShowModalIngresarMedio","showModalIngresarPublico","setShowModalIngresarPublico","fldPublicador","fldDestinatario","fldMedio","fldTextos","fldPublicacion","fldVideo","fldTipo","fldCopias","fldForm","setFldForm","modalRefPublicadores","useRef","modalRefMedios","modalRefPublicos","modalRefLista","current","resetForm","reset","openLista","handleSubmit","deletePublicador","getById","targetPublicador","deleteMedio","targetMedio","deletePublico","targetPublico","openModalIngresar","addPublicador","addMedio","addPublico","onSubmit","Prepend","FormControl","Check","ModalImportDB","handleFiles","importDatabase","handleDrop","e","dataTransfer","highlight","getElementById","classList","add","unhighlight","remove","preventDefaults","stopPropagation","useEffect","eventName","addEventListener","htmlFor","ModalHistorial","records","deleteRecord","targetRecord","intervalType","Math","floor","interval","timeSince","ChartLabel","display","paddingRight","height","width","float","paddingLeft","EstadisticasItem","textAlign","ModalEstadisticas","videos","publicaciones","revisitaDiff","estadisticas","setEstadisticas","loadData","getDailyStats","Carousel","Item","dataEntry","round","percentage","labelStyle","fontSize","fontFamily","fill","CustomToggle","RegistroHeader","modalRef","modalHistoryRef","modalEstadisticasRef","Dropdown","Toggle","Menu","confirm","exportExistingDatabase","removeItem","location","reload","showLista","marginLeft","allLetters","RegistroContainer","bodyRef","ModalLogin","userName","password","block","servidor","charAt","substr","username","res","handleServerLogin","catch","err","library","faAddressBook","faCog","faPlusSquare","faPencilAlt","faTrashAlt","faCommentDots","faEnvelope","faHandPaper","faBook","faUserEdit","faUndoAlt","faFile","faFolder","faDownload","faEllipsisH","faHistory","faChartPie","faMoon","faHiking","faSignOutAlt","faFilm","faFileAlt","Init","success","titleColor","messageColor","buttonColor","App","setAllPublicadores","setAllPublicos","setAllMedios","setAllLetters","showLogin","setShowLogin","setOnline","filtros","initOnlineServer","handleShowLogin","getAllPublicadores","receivedPublicadores","getAllPublicos","receivedPublicos","receivedMedios","getAllRecords","receivedLetters","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+bAIIA,E,iGCWWC,EAXF,WACT,OACC,yBAAKC,UAAU,qCACR,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0BACX,kBAAC,IAAD,CAAiBC,KAAK,iBAD1B,uD,mDDFVC,E,WACF,WAAYC,GAAU,IAAD,2BAEjBC,MAAYC,MAAK,SAAAC,GACjB,EAAKC,QAAO,EACZ,EAAKC,IAAI,GACT,EAAKC,MAAM,GACX,EAAKH,IAAIA,EACT,EAAKI,UAAS,EACd,IAAIC,EAASC,OAAOC,aAAaC,QAAQ,UAE5B,MAAVH,EACA,EAAKI,iBAEJ,EAAKC,GAAG,IAAI,EAAKV,IAAIJ,SAAS,EAAKe,WAAWN,IAElD,EAAKK,GAAGE,IAAI,6BACZpB,EAAgB,EACF,MAAVK,GAAgBA,O,sGAGDgB,EAAQV,G,0EACvBW,KAAKV,S,wBACTU,KAAKb,QAAO,EACZa,KAAKZ,IAAIW,EACTC,KAAKX,MAAMA,EACXG,OAAOC,aAAaQ,QAAQ,eAAgBZ,GAC5CG,OAAOC,aAAaQ,QAAQ,SAASF,G,SACfC,KAAKE,uB,OAArBZ,E,OACNU,KAAKV,SAASA,EACTA,IACDU,KAAKb,QAAO,G,iCAITa,KAAKV,U,gSAISa,IAAMC,IAAIJ,KAAKZ,IAAI,aAAc,CAClDiB,QAAS,CACP,eAAgBL,KAAKX,S,cAFrBC,E,yBAKmB,KAAjBA,EAASgB,Q,0DAEN,G,6LAGMC,G,gGAEQJ,IAAMC,IAAIJ,KAAKZ,IAAImB,EAAO,CAC3CF,QAAS,CACP,eAAgBL,KAAKX,S,cAFrBC,E,yBAKEA,EAASkB,M,uCAEbC,IAASC,OAAOC,QAAQ,iBAAc,8DAAwD,M,mBACvF,G,+LAGGJ,EAAOC,G,gGAEAL,IAAMS,KAAKZ,KAAKZ,IAAImB,EAAMC,EAAM,CACjDH,QAAS,CACP,eAAgBL,KAAKX,S,cAFrBC,E,yBAKEA,EAASkB,M,uCAEbC,IAASC,OAAOC,QAAQ,iBAAc,8DAAwD,M,mBACvF,G,mMAGKJ,G,gGAEKJ,IAAMU,OAAOb,KAAKZ,IAAImB,EAAO,CAC9CF,QAAS,CACP,eAAgBL,KAAKX,S,cAFrBC,E,yBAKEA,EAASkB,M,uCAEbC,IAASC,OAAOC,QAAQ,iBAAc,8DAAwD,M,mBACvF,G,uJAIfX,KAAKJ,GAAG,IAAII,KAAKd,IAAIJ,SACrBkB,KAAKc,qBACLd,KAAKe,oBACLf,KAAKgB,yB,qCAGMC,EAAOlC,GAAU,IAAD,OAEvBmC,EAAID,EAAM,GACVE,EAAI,IAAIC,WACZD,EAAEE,OAAS,WACP,IAAIC,EAAQ,IAAIC,WAAWJ,EAAEK,QAC7B,EAAK5B,GAAK,IAAI,EAAKV,IAAIJ,SAASwC,GACjB,OAAXvC,GAAiBA,KAGzBoC,EAAEM,kBAAkBP,K,gCAIpB,OAAOlB,KAAKJ,GAAGA,K,iCAGf,OAAOI,KAAKb,S,qCAGDuC,GACX1B,KAAKJ,GAAGE,IAAI4B,GACZ1B,KAAKgB,yB,6CAGLxB,OAAOC,aAAaQ,QAAQ,SAASD,KAAK2B,YAAY3B,KAAKJ,GAAGgC,a,+CAG9D,IAAIC,EAAY7B,KAAKJ,GAAGgC,SAC1BE,EAAO,IAAIC,KAAK,CAACF,IACjBG,EAAIC,SAASC,cAAc,KAC/BD,SAASE,KAAKC,YAAYJ,GACpBA,EAAEK,KAAO7C,OAAO8C,IAAIC,gBAAgBT,GACpC,IAAIU,EAAO,IAAIC,KACXC,EAAKF,EAAKG,cACVC,EAAMJ,EAAKK,WAAW,EACtBD,EAAM,KAAIA,EAAM,IAAIA,GACxB,IAAIE,EAAIN,EAAKO,UACTD,EAAI,KAAIA,EAAI,IAAIA,GACpB,IAAIE,EAAMF,EAAI,IAAIF,EAAM,IAAIF,EAElCV,EAAEiB,SAAW,YAAYD,EAAM,QAC/BhB,EAAEkB,QAAU,WACXC,YAAW,WACV3D,OAAO8C,IAAIc,gBAAgBpB,EAAEK,QAC3B,OAEJL,EAAEqB,U,2CAGGrD,KAAKJ,GAAGE,IAAI,yJACZE,KAAKJ,GAAGE,IAAI,gHACZE,KAAKJ,GAAGE,IAAI,kHACZE,KAAKJ,GAAGE,IAAI,4Z,0CAIXE,KAAKJ,GAAGE,IAAI,+EACZE,KAAKJ,GAAGE,IAAI,kEACZE,KAAKJ,GAAGE,IAAI,oEACZE,KAAKJ,GAAGE,IAAI,mEACZE,KAAKJ,GAAGE,IAAI,qEAEZE,KAAKJ,GAAGE,IAAI,wEACZE,KAAKJ,GAAGE,IAAI,kEACZE,KAAKJ,GAAGE,IAAI,8DACZE,KAAKJ,GAAGE,IAAI,oEACZE,KAAKJ,GAAGE,IAAI,4E,wCAGEwD,GACd,IAAIC,EAAG,EACHC,EAAOxD,KAAKJ,GAAG6D,QAAQ,6BAA6BH,GAGxD,IAFAE,EAAKE,cAECF,EAAKG,QAAQ,CAEfJ,EADUC,EAAKE,cACRH,GACPK,QAAQC,IAAI,QAIhB,OAFAL,EAAKM,OACLF,QAAQC,IAAIN,GACLA,I,2BAENQ,GACD,IAAIP,EAAOxD,KAAKJ,GAAG6D,QAAQM,GAC3BP,EAAKE,cAEL,IADA,IAAIM,EAAK,GACHR,EAAKG,QACPK,EAAKC,KAAKT,EAAKE,eAGnB,OADAF,EAAKM,OACEE,I,kCAIIE,GAIX,IAHA,IAAIC,EAAO,IAAI5C,WAAW2C,GACtBE,EAAU,GAELC,EAAE,EAFmB,MAEhBA,EAAcF,EAAKG,OAAQD,IACrCD,EAAQH,KAAKM,OAAOC,aAAaC,MAAM,KAAMN,EAAKO,SAHxB,MAGiCL,EAHjC,OAG+CA,EAAE,MAE/E,OAAOD,EAAQO,KAAK,M,iCAGZC,GAGR,IAFA,IAAIC,EAAID,EAAIN,OACJJ,EAAM,IAAI3C,WAAWsD,GACpBR,EAAE,EAAGA,EAAEQ,EAAGR,IAAKH,EAAIG,GAAKO,EAAIE,WAAWT,GAChD,OAAOH,M,uBElMAa,E,uKAbP,OACI,yBAAKnG,UAAU,YAAYoG,MAAO,CAACC,UAAU,OACzC,yBAAKrG,UAAU,8BACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,QACVoB,KAAKkF,MAAMC,iB,GAPRC,IAAMC,W,+DCoHvBC,E,WApHX,WAAY/B,EAAGgC,EAAKC,EAAWC,EAAMC,EAAQC,EAAOC,EAAOC,EAAYC,EAAMC,GAAQ,oBACjF/F,KAAKuD,GAAGA,EACRvD,KAAKuF,KAAKA,EACVvF,KAAKwF,WAAWA,EAChBxF,KAAKyF,MAAMA,EACXzF,KAAK0F,QAAQA,EACb1F,KAAK2F,OAAOA,EACZ3F,KAAK4F,MAAMA,EACX5F,KAAK6F,YAAYA,EACjB7F,KAAK8F,KAAKA,EACV9F,KAAK+F,OAAOA,E,mKA+BRrH,EAAgBsH,W,gCACGtH,EAAgBuH,kBAAkB,YAAYjG,KAAKuD,I,wCAC/D,G,cAEX7E,EAAgBwH,eAAe,gCAAgClG,KAAKuD,I,mBAC7D,G,8KAlCSiC,EAAWC,EAAMC,EAAQC,EAAOC,EAAOC,EAAaC,EAAMC,G,6FACtErH,EAAgBsH,W,gCAEItH,EAAgByH,gBAAgB,WAAW,CAACX,WAAYA,EAAYC,MAAOA,EAAOC,QAAQA,EAASC,OAAOA,EAAQG,KAAKA,EAAMM,mBAAoBP,EAAaQ,aAAcT,EAAOU,OAAQP,I,cAAzMQ,E,yBAEC,IAAIjB,EAAOiB,EAAQC,SAAUD,EAAQf,WAAYe,EAAQd,MAAOc,EAAQb,QAASa,EAAQZ,OAAQY,EAAQT,KAAMS,EAAQR,S,cAI1HvD,EAAO,IAAIC,KACXC,EAAKF,EAAKG,eACVC,EAAMJ,EAAKK,WAAW,GAChB,KAAID,EAAM,IAAIA,IACpBE,EAAIN,EAAKO,WACL,KAAID,EAAI,IAAIA,IAChB2D,EAAMjE,EAAKkE,YACN,KAAID,EAAM,IAAIA,IACnBE,EAAQnE,EAAKoE,cACL,KAAID,EAAQ,IAAIA,IACxBE,EAAQrE,EAAKsE,cACN,KAAID,EAAQ,IAAIA,GACvBtB,EAAK7C,EAAK,IAAIE,EAAM,IAAIE,EAAI,IAAI2D,EAAQ,IAAOE,EAAU,IAAOE,EACpEnI,EAAgBwH,eAAe,iFAAiFX,EAAK,KAAKC,EAAW,IAAIC,EAAM,IAAIC,EAAQ,IAAIC,EAAO,IAAIG,EAAK,KAC3KvC,EAAG7E,EAAgBqI,kBAAkB,W,kBACnC,IAAIzB,EAAO/B,EAAIgC,EAAMC,EAAYC,EAAOC,EAASC,EAAOG,I,wLAajDvC,G,6EACb7E,EAAgBsH,W,gCACItH,EAAgBsI,eAAe,YAAYzD,G,cAAzDgD,E,yBACC,IAAIjB,EAAOiB,EAAQC,SAAUD,EAAQf,WAAYe,EAAQd,MAAOc,EAAQb,QAASa,EAAQZ,OAAQY,EAAQT,O,UAIhG,IADhBS,EAAQ7H,EAAgBuI,KAAK,kCAAkC1D,IACvDe,O,2CAAkB,G,iCACvB,IAAIgB,EAAOiB,EAAQ,GAAGhD,GAAIgD,EAAQ,GAAGhB,KAAMgB,EAAQ,GAAGf,WAAYe,EAAQ,GAAGd,MAAOc,EAAQ,GAAGb,QAASa,EAAQ,GAAGZ,OAAQY,EAAQ,GAAGT,O,+PAIzIpH,EAAgBsH,W,gCACItH,EAAgBsI,eAAe,oB,cAA7CT,E,OACFW,EAAY,GAChBX,EAAQY,SAAQ,SAAAC,GACZF,EAAYjD,KAAZ,2BAAqBmD,GAArB,IAA2B7B,KAAM6B,EAAKC,UAAU,IAAID,EAAKE,WAAW,IAAIF,EAAKG,SAAS,IAAKH,EAAKI,UAAU,IAAKJ,EAAKK,YAAY,IAAKL,EAAKM,kB,kBAEvIR,G,gCAEAxI,EAAgBuI,KAAK,qQ,8QAI5BvI,EAAgBsH,W,gCACItH,EAAgBsI,eAAe,uB,cAA7CT,E,yBACCA,G,cAEP/D,EAAO,IAAIC,KACPC,EAAKF,EAAKG,eACVC,EAAMJ,EAAKK,WAAW,GAChB,KAAID,EAAM,IAAIA,IACpBE,EAAIN,EAAKO,WACL,KAAID,EAAI,IAAIA,GAChBE,EAAMN,EAAK,IAAIE,EAAM,IAAIE,EACvB6E,EAAMjJ,EAAgBuI,KAAK,8PAA8PjE,EAAM,MACjS4E,EAAS,GACIlJ,EAAgBuI,KAAK,qJAAqJjE,EAAM,iBACpL6E,KAAI,SAAAT,GACbQ,EAAS3D,KAAK,CACV6D,MAAOV,EAAK1B,QACZqC,MAAOX,EAAKY,OACZC,MAAOb,EAAKa,WAGhBC,EAAWxJ,EAAgBuI,KAAK,6IAA6IjE,EAAM,iBACnLmF,EAAO,GACXD,EAAWL,KAAI,SAAAT,GACXe,EAAOlE,KAAK,CACR6D,MAAOV,EAAK3B,MACZsC,MAAOX,EAAKY,OACZC,MAAMb,EAAKa,W,kBAGZ,CACHD,OAAOL,EAAM,GAAGK,OACpBI,aAAaT,EAAM,GAAGS,aACtBzC,OAAOgC,EAAM,GAAGhC,OAChB0C,UAAUV,EAAM,GAAGU,UACnBC,cAAcX,EAAM,GAAGW,cACvBV,SAAUA,EACVO,OAAQA,I,yGCxDLI,E,WAtDX,WAAYhF,EAAGiF,EAAOC,EAAOC,GAAU,oBACnC1I,KAAKuD,GAAGA,EACRvD,KAAKwI,OAAOA,EACZxI,KAAKyI,MAAMA,EACXzI,KAAK0I,SAASA,E,mKAiBVhK,EAAgBsH,W,gCACGtH,EAAgBuH,kBAAkB,iBAAiBjG,KAAKuD,I,wCACpE,G,cAEP7E,EAAgBwH,eAAe,qCAAqClG,KAAKuD,I,mBAClE,G,8KApBKiF,EAAQC,EAAOE,G,6EAC3BjK,EAAgBsH,W,gCAEItH,EAAgByH,gBAAgB,gBAAgB,CAACqC,OAAQA,EAAQC,MAAOA,EAAOC,SAAUC,I,cAAvGpC,E,yBAEC,IAAIgC,EAAWhC,EAAQqC,aAAcrC,EAAQiC,OAAQjC,EAAQkC,MAAOlC,EAAQmC,W,cAGnFhK,EAAgBwH,eAAe,8DAA8DsC,EAAO,KAAKC,EAAM,KAAKE,EAAW,KAC3HpF,EAAG7E,EAAgBqI,kBAAkB,gB,kBAClC,IAAIwB,EAAWhF,EAAIiF,EAAQC,EAAOE,I,8KAa5BpF,G,6EACb7E,EAAgBsH,W,gCACGtH,EAAgBsI,eAAe,iBAAiBzD,G,cAA7D/B,E,yBACC,IAAI+G,EAAW/G,EAAOoH,aAAapH,EAAOgH,OAAQhH,EAAOiH,MAAOjH,EAAOkH,W,UAG1D,IADhBnC,EAAQ7H,EAAgBuI,KAAK,uCAAuC1D,IAC5De,O,2CAAkB,G,iCACvB,IAAIiE,EAAWhC,EAAQ,GAAGhD,GAAIgD,EAAQ,GAAGiC,OAAQjC,EAAQ,GAAGoC,a,oQAKnEjK,EAAgBsH,W,gCACItH,EAAgBsI,eAAe,wB,cAA7CT,E,OACFsC,EAAgB,GACpBtC,EAAQY,SAAQ,SAAAC,GACZyB,EAAgB5E,KAAK,CAAC8D,MAAOX,EAAKwB,aAAcE,MAAO1B,EAAKoB,Y,kBAGzDK,G,gCAEJnK,EAAgBuI,KAAK,0D,yGCErB8B,E,WApDX,WAAYxF,EAAGiF,EAAQP,GAAO,oBAC1BjI,KAAKuD,GAAGA,EACRvD,KAAKwI,OAAOA,EACZxI,KAAKiI,MAAMA,E,mKAiBPvJ,EAAgBsH,W,gCACGtH,EAAgBuH,kBAAkB,aAAajG,KAAKuD,I,wCAChE,G,cAEX7E,EAAgBwH,eAAe,gCAAgClG,KAAKuD,I,mBAC7D,G,8KApBSiF,EAAQP,G,6EACpBvJ,EAAgBsH,W,gCAEItH,EAAgByH,gBAAgB,YAAY,CAACqC,OAAQA,EAAQP,MAAOA,I,cAAlF1B,E,yBAEC,IAAIwC,EAAQxC,EAAQyC,UAAWzC,EAAQiC,OAAQjC,EAAQ0B,Q,cAG9DvJ,EAAgBwH,eAAe,gDAAgDsC,EAAO,OAAOP,EAAM,MAC/F1E,EAAG7E,EAAgBqI,kBAAkB,W,kBAClC,IAAIgC,EAAQxF,EAAIiF,EAAQP,I,4KAalB1E,G,6EACb7E,EAAgBsH,W,gCACGtH,EAAgBsI,eAAe,aAAazD,G,cAAzD/B,E,yBACC,IAAIuH,EAAQvH,EAAOwH,UAAUxH,EAAOgH,OAAQhH,EAAOyG,Q,UAG1C,IADhB1B,EAAQ7H,EAAgBuI,KAAK,kCAAkC1D,IACvDe,O,2CAAkB,G,iCACvB,IAAIyE,EAAQxC,EAAQ,GAAGhD,GAAIgD,EAAQ,GAAGiC,OAAQjC,EAAQ,GAAG0B,Q,gQAI5DvJ,EAAgBsH,W,gCACItH,EAAgBsI,eAAe,oB,cAA7CT,E,OACF0C,EAAY,GAChB1C,EAAQY,SAAQ,SAAAC,GACZ6B,EAAYhF,KAAK,CAAC8D,MAAOX,EAAK4B,UAAWF,MAAO1B,EAAKoB,Y,kBAGlDS,G,gCAEJvK,EAAgBuI,KAAK,qD,yGCjD9BiC,E,WACF,WAAY3F,EAAGiF,EAAQP,GAAO,oBAC1BjI,KAAKuD,GAAGA,EACRvD,KAAKwI,OAAOA,EACZxI,KAAKiI,MAAMA,E,mKAiBPvJ,EAAgBsH,W,gCACGtH,EAAgBuH,kBAAkB,WAAWjG,KAAKuD,I,wCAC9D,G,cAEX7E,EAAgBwH,eAAe,8BAA8BlG,KAAKuD,I,mBAC3D,G,8KApBSiF,EAAQP,G,6EACpBvJ,EAAgBsH,W,gCAEItH,EAAgByH,gBAAgB,UAAU,CAACqC,OAAQA,EAAQP,MAAOA,I,cAAhF1B,E,yBAEC,IAAI2C,EAAM3C,EAAQ4C,QAAS5C,EAAQiC,OAAQjC,EAAQ0B,Q,cAG1DvJ,EAAgBwH,eAAe,8CAA8CsC,EAAO,OAAOP,EAAM,MAC7F1E,EAAG7E,EAAgBqI,kBAAkB,S,kBAClC,IAAImC,EAAM3F,EAAIiF,EAAQP,I,4KAahB1E,G,6EACb7E,EAAgBsH,W,gCACGtH,EAAgBsI,eAAe,WAAWzD,G,cAAvD/B,E,yBACC,IAAI0H,EAAM1H,EAAO2H,QAAQ3H,EAAOgH,OAAQhH,EAAOyG,Q,UAGtC,IADhB1B,EAAQ7H,EAAgBuI,KAAK,gCAAgC1D,IACrDe,O,2CAAkB,G,iCACvB,IAAI4E,EAAM3C,EAAQ,GAAGhD,GAAIgD,EAAQ,GAAGiC,OAAQjC,EAAQ,GAAG0B,Q,0GApChEiB,EAuCKE,a,sBAAa,8BAAApH,EAAA,0DACZtD,EAAgBsH,WADJ,gCAEQtH,EAAgBsI,eAAe,kBAFvC,cAENT,EAFM,OAGR8C,EAAU,GACd9C,EAAQY,SAAQ,SAAAC,GACZiC,EAAUpF,KAAK,CAAC8D,MAAOX,EAAK+B,QAASL,MAAO1B,EAAKoB,YALzC,kBAQLa,GARK,gCAUL3K,EAAgBuI,KAAK,mDAVhB,4CAcTiC,Q,QClBEI,EA3BGlE,IAAMmE,YAAW,SAACrE,EAAOsE,GAAS,IAAD,EACzBpE,IAAMqE,UAAS,GADU,mBAC1CC,EAD0C,KACpCC,EADoC,KAc7C,OAPJvE,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAClCK,gBADkC,SAClBC,GACZH,GAAQ,QAOR,kBAACI,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAZJ,SAAAF,GACnBH,GAAQ,KAYJ,kBAACI,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,kBAAwBhF,EAAMY,OAElC,kBAACiE,EAAA,EAAMI,KAAP,KACKjF,EAAMkF,YAAYvC,KAAI,SAAAT,GAAI,OAAI,uBAAGiD,IAAKjD,EAAKW,MAAOnJ,UAAU,wEAAuE,yBAAKyL,IAAK,MAAMjD,EAAKW,MAAOnJ,UAAU,wCAAwC,wBAAIyL,IAAK,KAAKjD,EAAKW,MAAOnJ,UAAU,QAAQwI,EAAK0B,OAAW,2BAAOuB,IAAK,QAAQjD,EAAKW,MAAOnJ,UAAU,cAAa,kBAAC,IAAD,CAAiByL,IAAK,KAAKjD,EAAKW,MAAOuC,QAAS,kBAAMpF,EAAMqF,eAAenD,EAAKW,QAAQlJ,KAAK,yB,iBCb5a2L,EAAe,CACjBC,KAAM,SAACC,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,gBAAiB,UACjB3C,MAAO,UACP4C,OAAQ,KAEVC,OAAO,SAACJ,EAASC,GAAV,mBAAC,eACDD,GADA,IAEHE,gBAAiBD,EAAMI,UAAY,UAAY,SACjD9C,MAAO,aAET+C,MAAO,SAACN,EAAUC,GAAX,mBAAC,eACLD,GADI,IAELzC,MAAO,aAETgD,QAAS,SAACP,EAAUC,GAAX,mBAAC,eACLD,GADI,IAEPQ,WAAY,cACZC,YAAa,aAGfC,YAAa,SAACV,EAAUC,GAEtB,OAAO,2BAAKD,GAAZ,IAAsBzC,MAAO,cAsJpBoD,EAlJGjG,IAAMmE,YAAW,SAACrE,EAAOsE,GAAO,IAAD,EACrBpE,IAAMqE,UAAS,GADM,mBACtCC,EADsC,KAChCC,EADgC,OAEnBvE,IAAMqE,SAAS,IAFI,mBAEtC6B,EAFsC,KAE/BC,EAF+B,OAGfnG,IAAMqE,SAAS,IAHA,mBAGtC+B,EAHsC,KAG7BC,EAH6B,KAKvCC,EAAgB,uCAAC,WAAO5B,GAAP,SAAA9H,EAAA,sDACnB2H,GAAQ,GADW,2CAAD,sDAQhBgC,EAAQ,uCAAE,8BAAA3J,EAAA,yDAEC,QADPwG,EAAQhJ,OAAOoM,OAAO,sCACEC,IAATrD,GAAsC,KAAhBA,EAAOsD,OAFtC,0CAE2D,GAF3D,cAGZrL,IAASsL,QAAQC,OAAO,sBAHZ,SAISzD,EAAW0D,OAAOzD,EAAQ,GAAG,GAJtC,cAIR0D,EAJQ,gBAKNhH,EAAMiH,YAAY,CAAC/D,cAAc,IAL3B,cAMZ3H,IAAS2L,OAAOC,QAAQ,qBACxBC,EAAkB,CACdxD,MAAON,EACPT,MAAOmE,EAAU3I,KATT,mBAWL,GAXK,4CAAF,qDAwBd6B,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAC5BK,gBAD4B,SACZC,GAAO,OAAD,2GACxBrJ,IAASsL,QAAQC,OAAO,+BADA,SAElBO,IAFkB,OAGxB5C,GAAQ,GACRlJ,IAASsL,QAAQS,SAJO,kDAShC,IAAMC,EAAiB,uCAAG,WAAOC,GAAP,SAAA1K,EAAA,0DACnBtD,EAAgBsH,WADG,gCAEZtH,EAAgByH,gBAAgB,UAAW,CAACmF,MAAOoB,IAFvC,iCAIf,GAJe,2CAAH,sDAMjBH,EAAkB,uCAAE,4BAAAvK,EAAA,0DACnBtD,EAAgBsH,WADG,gCAEDtH,EAAgBsI,eAAe,WAF9B,OAEdsE,EAFc,OAGlBC,EAASD,EAAMA,OAHG,iCAKf,GALe,2CAAF,qDAUlBgB,EAAkB,SAAAK,GAEpB,IADA,IAAMC,EAAS,GACNvI,EAAE,EAAGA,EAAEiH,EAAMhH,OAAQD,IAC1BuI,EAAS3I,KAAKqH,EAAMjH,IAEpB,GA1Ce,SAACwI,EAAKC,GACzB,IAAIzI,EACJ,IAAKA,EAAI,EAAGA,EAAIyI,EAAKxI,OAAQD,IACzB,GAAIyI,EAAKzI,KAAOwI,EACZ,OAAO,EAIf,OAAO,EAkCAE,CAAeJ,EAAWC,GAAW,OAAO,EAC9C,GAAII,EAAmBL,GACnBC,EAAS3I,KAAK0I,OACb,CAED,IADA,IAAIM,GAAmB,EACd5I,EAAE,EAAGA,EAAEuI,EAAStI,OAAQD,IAC9B,GAAI2I,EAAmBJ,EAASvI,IAAI,CAChCuI,EAASM,OAAO7I,EAAE,EAAEsI,GACpBM,GAAmB,EACnB,MAGJA,GACCL,EAAS3I,KAAK0I,GAK5BpB,EAASqB,GACTH,EAAkBG,IAGfI,EAAqB,SAAAL,GACvB,OAAoC,GAA7BnB,EAAQ2B,QAAQR,IAGrBS,EAAc,SAACT,GACjB,IAAMD,EAAS,YAAIpB,GAInB,OAHAoB,EAASQ,OAAOR,EAASS,QAAQR,GAAW,GAC5CpB,EAASmB,GACTD,EAAkBC,GACXA,GAUX,OACI,kBAAC3C,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQ0B,GAC3B,kBAAC3B,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,yBAEJ,kBAACH,EAAA,EAAMI,KAAP,KAEA,kBAACkD,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACA,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAQC,QAAS5I,EAAM2D,gBAAiBkF,OAAQvD,EAAcwD,KAAK,gBAAiBC,SAlHxF,SAAAnE,GAChBwC,EAAkBxC,GAClBrJ,IAAS2L,OAAOC,QAAQ,qCAiHJ,kBAACwB,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAASqB,GAAU,kBAAC,IAAD,CAAiB9M,KAAK,gBAMzF,yBAAMkP,OAAQ,CAACM,WAAW,QACzC/C,EAAMzD,KAAI,SAACT,EAAKkH,GAAN,OACX,uBAAGjE,IAAKjD,EAAKW,MACTnJ,UAAU,wEACV,yBAAKA,UAAU,wCACX,wBAAIA,UAAU,OAAO0L,QAAS,YAhCZ,SAACqC,GACRS,EAAcT,GAC7BlB,EAAW,GAAD,mBAAKD,GAAL,CAAcmB,KACxBzH,EAAMqJ,kBAAkB5B,GACxBjB,IA4ByC8C,CAAkBpH,KACnD,0BAAMxI,UAAU,iBAAhB,IAAkC0P,EAAM,EAAxC,MADJ,IACyDlH,EAAK0B,OACzD,2BAAOlK,UAAU,cACtB,kBAAC,IAAD,CAAiBC,KAAK,YAAYyL,QAAS,WAAO8C,EAAchG,kBC7G3DqH,EAhEK,SAACvJ,GAGnB,IAAIwJ,EAAO,GACXxJ,EAAMyJ,OAAOxH,SAAQ,SAAAyH,GACbF,EAAO,2BACAA,GADD,kBAEDE,EAAMZ,KAAOY,EAAMC,aAPH,MAUFzJ,IAAMqE,SAASiF,GAVb,mBAUtBC,EAVsB,KAUdG,EAVc,KAWvBC,EAAe,SAAAjF,GACjB,IAAMkF,EAAQlF,EAAMkF,OACF,aAAdA,EAAOC,KACPH,GAAU,SAAAI,GACN,OAAO,2BAAIA,GAAX,kBAAuBF,EAAOhB,KAAOgB,EAAOG,aAGhDL,GAAU,SAAAI,GACN,OAAO,2BAAIA,GAAX,kBAAsBF,EAAOhB,KAAOgB,EAAOjH,YAiBnD,OAEI,kBAACgC,EAAA,EAAD,CAAOL,KAAMxE,EAAMwE,KAAMM,OAfV,SAAAF,GACnB5E,EAAMyE,SAAQ,GACd/F,QAAQC,IAAI8K,KAcR,kBAAC5E,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,gBAAsBhF,EAAMY,OAEhC,kBAACiE,EAAA,EAAMI,KAAP,KACKjF,EAAMyJ,OAAO9G,KAAI,SAACT,EAAMkH,GAAP,OACd,kBAACjB,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKnD,IAAKiE,GAC1B,kBAACjB,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KACjBvG,EAAK0B,OAEV,kBAAC8E,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACN,EAAA,EAAK+B,QAAN,CAAcH,KAAM7H,EAAK6H,KAAMjB,KAAM5G,EAAK4G,KAAMjG,MAAO4G,EAAQvH,EAAK4G,MAAOmB,QAASR,EAAQvH,EAAK4G,MAAOC,SAAUc,SAK1H,yBAAKnQ,UAAU,eACX,kBAACuP,EAAA,EAAD,CAAQC,QAAQ,UAAU9D,QA5BvB,SAAAR,GACfA,EAAMuF,iBACKnK,EAAMoK,eAAeX,IAE5BG,EAAUJ,KAwBF,eC7CZlE,EAAe,CACnBC,KAAM,SAACC,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,gBAAiB,UACjB3C,MAAO,UACP4C,OAAQ,KAEVC,OAAO,SAACJ,EAASC,GAAV,mBAAC,eACDD,GADA,IAEHE,gBAAiBD,EAAMI,UAAY,UAAY,SACjD9C,MAAO,aAET+C,MAAO,SAACN,EAAUC,GAAX,mBAAC,eACLD,GADI,IAELzC,MAAO,aAETgD,QAAS,SAACP,EAAUC,GAAX,mBAAC,eACLD,GADI,IAEPQ,WAAY,cACZC,YAAa,aAGfC,YAAa,SAACV,EAAUC,GAEtB,OAAO,2BAAKD,GAAZ,IAAsBzC,MAAO,cAsZpBsH,EAlZOnK,IAAMmE,YAAW,SAACrE,EAAOsE,GAAS,IAAD,EACkBpE,IAAMqE,UAAS,GADjC,mBAC5C+F,EAD4C,KACfC,EADe,OAEQrK,IAAMqE,UAAS,GAFvB,mBAE5CiG,EAF4C,KAEpBC,EAFoB,OAGYvK,IAAMqE,UAAS,GAH3B,mBAG5CmG,EAH4C,KAGlBC,EAHkB,OAItBzK,IAAMqE,SAAS,CACxCqG,cAAc,CACV/H,MAAM,IACNe,MAAO,cAEXiH,gBAAiB,EACjBC,SAAS,EACTC,UAAU,EACVC,gBAAgB,EAChBC,UAAU,EACVC,QAAQ,IACRC,UAAW,IAfoC,mBAI5CC,EAJ4C,KAIpCC,EAJoC,KAkB7CC,EAAqBpL,IAAMqL,OAAO,MAClCC,EAAetL,IAAMqL,OAAO,MAC5BE,EAAiBvL,IAAMqL,OAAO,MAC9BG,EAAcxL,IAAMqL,OAAO,MAI3B5G,EAAiB,SAAA/D,GACT,gBAANA,EACA0K,EAAqBK,QAAQhH,kBAEnB,YAAN/D,EACA6K,EAAiBE,QAAQhH,kBAEhB,SAAN/D,EACC8K,EAAcC,QAAQhH,kBAEtB6G,EAAeG,QAAQhH,mBAQjCiH,EAAU,WACRP,EAAW,CACPT,cAAc,CACV/H,MAAM,IACNe,MAAO,cAEXiH,gBAAiB,EACjBC,SAAS,EACTC,UAAU,EACVG,QAAQ,IACRF,gBAAgB,EAChBC,UAAU,EACVE,UAAW,KAGvBjL,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAClCuH,MADkC,WAE9BD,KAEJE,UAJkC,WAK9BnH,EAAgB,cAIxB,IAMMkF,EAAc,SAAAjF,GAEhB,GAAG,WAAYA,EACX,GAAyB,aAAtBA,EAAMkF,OAAOC,KAAoB,CAAC,IAAD,EACVnF,EAAMkF,OAAvBhB,EAD2B,EAC3BA,KAAMmB,EADqB,EACrBA,QACXoB,EAAW,2BAAID,GAAL,kBAActC,EAAOmB,SAC9B,CAAC,IAAD,EACmBrF,EAAMkF,OAArBhB,EADJ,EACIA,KAAMjG,EADV,EACUA,MACXwI,EAAW,2BAAID,GAAL,kBAActC,EAAOjG,UAInCwI,EAAW,2BAAID,GAAL,IAAaR,cAAehG,MAIxCmH,EAAY,uCAAE,WAAOnH,GAAP,SAAA9H,EAAA,yDAChB8H,EAAMuF,iBAC2B,GAA7BiB,EAAQR,cAAc/H,MAFV,0CAE2B,GAF3B,cAGhBtH,IAASsL,QAAQC,OAAO,sBAHR,SAMQ1G,EAAO2G,OAAOqE,EAAQR,cAAc/H,MAAMuI,EAAQN,SAAUM,EAAQP,gBAAiBO,EAAQL,UAAWK,EAAQH,SAAUG,EAAQJ,eAAgBI,EAAQF,QAASE,EAAQD,WANnL,cAOhB5P,IAASsL,QAAQS,SACjBsE,IACArQ,IAAS2L,OAAOC,QAAQ,qBATR,4CAAF,sDA8CZ6E,EAAgB,uCAAC,WAAO3N,GAAP,eAAAvB,EAAA,6DACnBvB,IAASsL,QAAQC,OAAO,yBADL,SAESzD,EAAW4I,QAAQ5N,GAF5B,UAGG,IADlB6N,EAFe,wCAGgBA,EAAiBvQ,SAHjC,OAInBJ,IAAS2L,OAAOC,QAAQ,wBACxB5L,IAASsL,QAAQS,SACjBtH,EAAMiH,YAAY,CAAC/D,cAAc,IANd,4CAAD,sDAQhBiJ,EAAW,uCAAE,WAAM9N,GAAN,eAAAvB,EAAA,6DACfvB,IAASsL,QAAQC,OAAO,oBADT,SAEO9C,EAAMiI,QAAQ5N,GAFrB,UAGE,IADb+N,EAFW,wCAGeA,EAAYzQ,SAH3B,OAIfJ,IAAS2L,OAAOC,QAAQ,mBACxB5L,IAASsL,QAAQS,SACjBtH,EAAMiH,YAAY,CAAChE,QAAQ,IANZ,4CAAF,sDAQXoJ,EAAa,uCAAE,WAAMhO,GAAN,eAAAvB,EAAA,6DACjBvB,IAASsL,QAAQC,OAAO,yBADP,SAEOjD,EAAQoI,QAAQ5N,GAFvB,UAGE,IADfiO,EAFa,wCAGeA,EAAc3Q,SAH7B,OAIjBJ,IAAS2L,OAAOC,QAAQ,qBACxB5L,IAASsL,QAAQS,SACjBtH,EAAMiH,YAAY,CAACvE,UAAU,IANZ,4CAAF,sDAQb6J,EAAkB,SAAC3L,GACV,eAAPA,EACA2J,GAA+B,GAEpB,UAAP3J,EACA6J,GAA0B,GAE1BE,GAA4B,IAIlC6B,EAAa,uCAAE,WAAO/C,GAAP,eAAA3M,EAAA,yDACG,OAAhB2M,EAAOnG,aAAiCqD,IAAhB8C,EAAOnG,QAA6C,KAAvBmG,EAAOnG,OAAOsD,OADtD,0CAC2E,GAD3E,UAEE,OAAf6C,EAAOlG,YAA+BoD,IAAf8C,EAAOlG,OAA2C,KAAtBkG,EAAOlG,MAAMqD,OAFnD,0CAEwE,GAFxE,cAGjBrL,IAASsL,QAAQC,OAAO,wBAHP,SAIIzD,EAAW0D,OAAO0C,EAAOnG,OAAQmG,EAAOlG,MAAOkG,EAAOhG,YAJ1D,cAIbuD,EAJa,OAKjBzL,IAASsL,QAAQS,SALA,UAMXtH,EAAMiH,YAAY,CAAC/D,cAAc,IANtB,eAOjB3H,IAAS2L,OAAOC,QAAQ,uBACxBkE,EAAW,2BACJD,GADG,IAENR,cAAc,CACV/H,MAAOmE,EAAU3I,GACjBuF,MAAOoD,EAAU1D,WAZR,mBAeV,GAfU,4CAAF,sDAiBbmJ,GAAQ,uCAAE,WAAMhD,GAAN,eAAA3M,EAAA,yDACQ,OAAhB2M,EAAOnG,aAAiCqD,IAAhB8C,EAAOnG,QAA6C,KAAvBmG,EAAOnG,OAAOsD,OAD3D,0CACgF,GADhF,UAEO,OAAf6C,EAAO1G,YAA+B4D,IAAf8C,EAAO1G,OAA2C,KAAtB0G,EAAO1G,MAAM6D,OAFxD,0CAE6E,GAF7E,cAGZrL,IAASsL,QAAQC,OAAO,mBAHZ,SAKQ9C,EAAM+C,OAAO0C,EAAOnG,OAAQmG,EAAO1G,OAL3C,cAKRiE,EALQ,OAMZzL,IAASsL,QAAQS,SANL,UAONtH,EAAMiH,YAAY,CAAChE,QAAO,IAPpB,eAQZ1H,IAAS2L,OAAOC,QAAQ,kBACxBkE,EAAW,2BACJD,GADG,IAENN,SAAS9D,EAAU3I,MAXX,mBAaL,GAbK,4CAAF,sDAeRqO,GAAU,uCAAE,WAAMjD,GAAN,eAAA3M,EAAA,yDACM,OAAhB2M,EAAOnG,aAAiCqD,IAAhB8C,EAAOnG,QAA6C,KAAvBmG,EAAOnG,OAAOsD,OADzD,0CAC8E,GAD9E,UAEK,OAAf6C,EAAO1G,YAA+B4D,IAAf8C,EAAO1G,OAA2C,KAAtB0G,EAAO1G,MAAM6D,OAFtD,0CAE2E,GAF3E,cAGdrL,IAASsL,QAAQC,OAAO,wBAHV,SAIMjD,EAAQkD,OAAO0C,EAAOnG,OAAQmG,EAAO1G,OAJ3C,cAIViE,EAJU,OAKdzL,IAASsL,QAAQS,SACjB/L,IAAS2L,OAAOC,QAAQ,oBANV,UAORnH,EAAMiH,YAAY,CAACvE,UAAU,IAPrB,eASd2I,EAAW,2BACJD,GADG,IAENP,gBAAiB7D,EAAU3I,MAXjB,mBAaP,GAbO,4CAAF,sDAeZ,OACI,kBAAC8J,EAAA,EAAD,CAAMwE,SAAUZ,GAEhB,yBAAKrS,UAAU,aACX,yBAAKA,UAAU,aACX,kBAACyO,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAQC,QAAS5I,EAAM2D,gBAAiBkF,OAAQvD,EAAcwD,KAAK,gBAAgBjG,MAAOuI,EAAQR,cAAe7B,SAAUc,IAC3H,kBAAClB,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,WAAOmH,EAAkB,gBAAgB,kBAAC,IAAD,CAAiB5S,KAAK,iBAC5G,kBAACsP,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,kBAAKT,EAAgB,kBAAiB,kBAAC,IAAD,CAAiBhL,KAAK,gBACzG,kBAACsP,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,kBAAKT,EAAgB,WAAU,kBAAC,IAAD,CAAiBhL,KAAK,gBAGlG,kBAAC,EAAD,CAAaiH,KAAK,eAAesE,YAAalF,EAAM2D,gBAAiBW,IAAKgH,EAClErE,YAAajH,EAAMiH,YAAa5B,eAAgB2G,IACxD,kBAAC,EAAD,CACAxH,KAAM8F,EACN7F,QAAS8F,EACT3J,KAAK,aACLwJ,eAAgBoC,EAChB/C,OAAQ,CACJ,CAACX,KAAM,SAAUiB,KAAM,OAAQnG,MAAO,SAAU+F,QAAS,IACzD,CAACb,KAAM,QAASiB,KAAM,SAAUnG,MAAO,QAAS+F,QAAS,KACzD,CAACb,KAAM,aAAciB,KAAM,WAAYnG,MAAO,mBAAiB+F,SAAQ,UAOvF,kBAACxB,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACE,EAAA,EAAD,KACA,kBAACR,EAAA,EAAK+B,QAAN,CAAc7B,GAAG,SAASS,KAAK,kBAAkBjG,MAAOuI,EAAQP,gBAAiB9B,SAAUc,GACrF7J,EAAM+D,YAAYpB,KAAI,SAAAT,GAAI,OAAI,4BAAQiD,IAAKjD,EAAKW,MAAOA,MAAOX,EAAKW,OAAQX,EAAK0B,WAEtF,kBAAC+E,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,WAAOmH,EAAkB,aAAa,kBAAC,IAAD,CAAiB5S,KAAK,iBACzG,kBAACsP,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,kBAAKT,EAAgB,cAAa,kBAAC,IAAD,CAAiBhL,KAAK,gBACrG,kBAAC,EAAD,CAAaiH,KAAK,gBAAgBsE,YAAalF,EAAM+D,YAAaO,IAAKmH,EACnExE,YAAajH,EAAMiH,YAAa5B,eAAgBgH,IAChD,kBAAC,EAAD,CACJ7H,KAAMkG,EACNjG,QAASkG,EACT/J,KAAK,eACLwJ,eAAgBsC,GAChBjD,OAAQ,CACJ,CAACX,KAAM,SAAUiB,KAAM,OAAQnG,MAAO,SAAU+F,QAAS,IACzD,CAACb,KAAM,QAASiB,KAAM,QAASnG,MAAO,QAAS+F,QAAQ,WAMvE,kBAACxB,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACE,EAAA,EAAD,KACA,kBAACR,EAAA,EAAK+B,QAAN,CAAc7B,GAAG,SAASS,KAAK,WAAWjG,MAAOuI,EAAQN,SAAU/B,SAAUc,GAC3E7J,EAAMmE,UAAUxB,KAAI,SAAAT,GAAI,OAAI,4BAAQiD,IAAKjD,EAAKW,MAAOA,MAAOX,EAAKW,OAAQX,EAAK0B,WAGhF,kBAAC+E,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,WAAOmH,EAAkB,WAAW,kBAAC,IAAD,CAAiB5S,KAAK,iBACvG,kBAACsP,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QAAS,kBAAKT,EAAgB,YAAW,kBAAC,IAAD,CAAiBhL,KAAK,gBACnG,kBAAC,EAAD,CAAaiH,KAAK,SAASsE,YAAalF,EAAMmE,UAAWG,IAAKkH,EAC1DvE,YAAajH,EAAMiH,YAAa5B,eAAgB8G,IACpD,kBAAC,EAAD,CACA3H,KAAMgG,EACN/F,QAASgG,EACT7J,KAAK,QACLwJ,eAAgBqC,GAChBhD,OAAQ,CACJ,CAACX,KAAM,SAAUiB,KAAM,OAAQnG,MAAO,SAAU+F,QAAS,IACzD,CAACb,KAAM,QAASiB,KAAM,QAASnG,MAAO,QAAS+F,QAAQ,WAMvE,kBAACxB,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,sBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWiE,QAAZ,KACI,kBAAC3D,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QA7MhD,WACZiG,GAAW,SAAArB,GACP,OAAO,2BACAoB,GADP,IAEIL,UAAWf,EAAUe,UAAY,SAyMjB,MAEJ,kBAAC8B,EAAA,EAAD,CAAa/D,KAAK,YAAYjG,MAAOuI,EAAQL,UAAWhC,SAAUc,IAElE,kBAAClB,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QA3NhD,WACZiG,GAAW,SAAArB,GACP,OAAO,2BACAoB,GADP,IAEIL,UAAWf,EAAUe,UAAY,SAuNjB,SAKZ,kBAAC5C,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,WAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACN,EAAA,EAAK2E,MAAN,CACI/C,KAAK,SACL1L,GAAG,cACHuF,MAAM,WACNkF,KAAK,WACLmB,QAASmB,EAAQH,SACjBlC,SAAUc,IAEd,kBAAC1B,EAAA,EAAK2E,MAAN,CACI/C,KAAK,SACLnG,MAAM,iBACNvF,GAAG,oBACHyK,KAAK,iBACLmB,QAASmB,EAAQJ,eACjBjC,SAAUc,MAItB,kBAAC1B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,QAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACA,kBAACN,EAAA,EAAK2E,MAAN,CACI/C,KAAK,QACLjB,KAAK,UACLlF,MAAM,iBACNf,MAAM,IACNoH,QAA2B,MAAlBmB,EAAQF,QACjBnC,SAAUc,IAGd,kBAAC1B,EAAA,EAAK2E,MAAN,CACI/C,KAAK,QACLnG,MAAM,WACNkF,KAAK,UACLjG,MAAM,IACNoH,QAA2B,MAAlBmB,EAAQF,QACjBnC,SAAUc,MAI1B,kBAAC1B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,UAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACE,EAAA,EAAD,KACI,kBAACA,EAAA,EAAWiE,QAAZ,KACI,kBAAC3D,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QA5P1C,WAClB,GAA0B,IAAtBgG,EAAQD,UAAiB,OAAO,EACpCE,GAAW,SAAArB,GACP,OAAO,2BACAoB,GADP,IAEID,UAAWnB,EAAUmB,UAAY,SAuPjB,MAEJ,kBAAC0B,EAAA,EAAD,CAAa/D,KAAK,YAAYjG,MAAOuI,EAAQD,UAAWpC,SAAUc,IAElE,kBAAClB,EAAA,EAAWK,OAAZ,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB9D,QA1Q1C,WAClBiG,GAAW,SAAArB,GACP,OAAO,2BACAoB,GADP,IAEID,UAAWnB,EAAUmB,UAAY,SAsQjB,UAMhB,yBAAKzR,UAAU,eACX,kBAACuP,EAAA,EAAD,CAAQC,QAAQ,UAAUa,KAAK,UAA/B,sBAKR,kBAAC,EAAD,CAAYpG,gBAAiB3D,EAAM2D,gBAAiBW,IAAKoH,EAC9Bc,cAAeA,EAAevF,YAAajH,EAAMiH,YAAaoC,kBAzUzE,SAACnH,GACrBmJ,EAAW,2BAAID,GAAL,IAAaR,cAAe1I,Y,QCxB7B6K,EAnFK7M,IAAMmE,YAAW,SAACrE,EAAOsE,GAAS,IAAD,EAC3BpE,IAAMqE,UAAS,GADY,mBAC5CC,EAD4C,KACtCC,EADsC,KAS7C+B,EAAiB,SAAA5B,GACnBH,GAAQ,IAEZvE,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAClCK,gBADkC,SAClBC,GACZH,GAAQ,QAGhB,IAAMuI,EAAY,SAACjR,GACfvC,EAAgByT,eAAelR,EAAOiE,EAAMiH,aAE5CT,IACAjL,IAASC,OAAO2L,QAAQ,iBAAc,uCAAoC,OAGxE+F,EAAW,SAACC,GACd,IACFpR,EADWoR,EAAEC,aACFrR,MACjBiR,EAAYjR,IAIFsR,EAAW,SAACF,GACdpQ,SAASuQ,eAAe,aAAaC,UAAUC,IAAI,cAGjDC,EAAY,SAACN,GACfpQ,SAASuQ,eAAe,aAAaC,UAAUG,OAAO,cAEnDC,EAAiB,SAACR,GACrBA,EAAEhD,iBACFgD,EAAES,mBAwBF,OArBFC,qBAAU,WAEJrJ,IACC,CAAC,YAAa,WAAY,YAAa,QAAQvC,SAAQ,SAAA6L,GACpD/Q,SAASuQ,eAAe,aAAaS,iBAAiBD,EAAWH,GAAiB,MAGrF,CAAC,YAAa,YAAY1L,SAAQ,SAAA6L,GAC/B/Q,SAASuQ,eAAe,aAAaS,iBAAiBD,EAAWT,GAAW,MAG/E,CAAC,YAAa,QAAQpL,SAAQ,SAAA6L,GAC3B/Q,SAASuQ,eAAe,aAAaS,iBAAiBD,EAAWL,GAAa,MAGlF1Q,SAASuQ,eAAe,aAAaS,iBAAiB,OAAQb,GAAY,MAI3E,CAAC1I,IAIA,kBAACK,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQ0B,GAC3B,kBAAC3B,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,gCAEJ,kBAACH,EAAA,EAAMI,KAAP,KACA,yBAAK5G,GAAG,aACJ,0BAAM3E,UAAU,WACZ,qHACA,2BAAOqQ,KAAK,OAAO1L,GAAG,WAAWyK,KAAK,WAAWC,SAxE9C,SAAAoE,GACf,IAAIpR,EAAMoR,EAAErD,OAAO/N,MACnBiR,EAAYjR,MAuEA,2BAAOrC,UAAU,kBAAkBsU,QAAQ,YAA3C,yBChCHC,EAzCM/N,IAAMmE,YAAW,SAACrE,EAAOsE,GAAS,IAAD,EAC5BpE,IAAMqE,UAAS,GADa,mBAC7CC,EAD6C,KACvCC,EADuC,KAOpDvE,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAC5BK,gBAD4B,SACZC,GAAO,OAAD,oGACxBrJ,IAASsL,QAAQC,OAAO,kBACxB9G,EAAMiH,YAAY,CAACiH,SAAS,IAC5BzJ,GAAQ,GACRlJ,IAASsL,QAAQS,SAJO,kDAQhC,IAAM6G,EAAY,uCAAC,WAAO9P,GAAP,eAAAvB,EAAA,6DACfvB,IAASsL,QAAQC,OAAO,uBADT,SAEQ1G,EAAO6L,QAAQ5N,GAFvB,UAGG,IADd+P,EAFW,wCAGgBA,EAAazS,SAH7B,OAIfJ,IAAS2L,OAAOC,QAAQ,mBACxB5L,IAASsL,QAAQS,SACjBtH,EAAMiH,YAAY,CAACiH,SAAS,IANb,4CAAD,sDAYd,OAEI,kBAACrJ,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OA1BJ,SAAAF,GACnBH,GAAQ,KA0BJ,kBAACI,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,6BAEJ,kBAACH,EAAA,EAAMI,KAAP,KACHjF,EAAMkF,YAAYvC,KAAI,SAAAT,GAAI,OAAI,uBAAGiD,IAAKjD,EAAK7D,GAAI3E,UAAU,wEAAuE,yBAAKyL,IAAK,MAAMjD,EAAK7D,GAAI3E,UAAU,wCAAwC,wBAAIyL,IAAK,KAAKjD,EAAK7D,GAAI3E,UAAU,QAAQwI,EAAK5B,YAAgB,2BAAO6E,IAAK,QAAQjD,EAAK7D,GAAI3E,UAAU,cAAvC,IC7ClQ,SAAA4D,GACQ,kBAATA,IACPA,EAAO,IAAIC,KAAKD,IAGlB,IACI+Q,EADA1M,EAAU2M,KAAKC,OAAO,IAAIhR,KAASD,GAAQ,KAG3CkR,EAAWF,KAAKC,MAAM5M,EAAU,SAgCpC,OA/BI6M,GAAY,EACdH,EAAe,UAEfG,EAAWF,KAAKC,MAAM5M,EAAU,UAChB,EACd0M,EAAe,OAEfG,EAAWF,KAAKC,MAAM5M,EAAU,SAChB,EACd0M,EAAe,UAEfG,EAAWF,KAAKC,MAAM5M,EAAU,QAChB,EACd0M,EAAe,QAEfG,EAAWF,KAAKC,MAAM5M,EAAU,MAChB,EACd0M,EAAe,UAEfG,EAAW7M,EACX0M,EAAe,YAOrBG,EAAW,GAAkB,IAAbA,KAClBH,GAAgB,KAGX,QAASG,EAAW,IAAMH,EDKiSI,CAAUvM,EAAK7B,MAArE,IAA4E,kBAAC,IAAD,CAAiB8E,IAAK,KAAKjD,EAAK7D,GAAI+G,QAAS,kBAAM+I,EAAajM,EAAK7D,KAAK1E,KAAK,gBAA4B,uBAAGD,UAAU,QAAO,0BAAMqJ,MAAkB,GAAXb,EAAKtB,KAAU,SAAW,UAAsB,GAAXsB,EAAKtB,KAAU,iBAAmB,YAAxG,MAA8HsB,EAAK1B,SAAY,2BAAO9G,UAAU,cAAjB,eAA2CwI,EAAK3B,gB,QE7BznBmO,EAfG,SAAC1O,GACf,OACI,yBAAKF,MAAO,CAAC6O,QAAS,eAAgBC,aAAc,KAChD,yBAAK9O,MAAO,CACtB+O,OAAQ,QACRC,MAAO,GACPpJ,gBAAiB1F,EAAM+C,MACvBgM,MAAO,UAGG,yBAAKjP,MAAO,CAACkP,YAAa,GAAID,MAAO,SAAU/O,EAAM4D,MAArD,O,QCDNqL,EAAkB,SAACjP,GACrB,OACI,yBAAKF,MAAO,CAACiP,MAAM,OAAQD,MAAO9O,EAAM8O,MAAOI,UAAW,SAAUL,OAAQ,GAAI9O,UAAU,KACtF,4BAAKC,EAAM4D,OACX,wBAAIiF,OAAQ,CAAC9I,UAAW,KACnBC,EAAM6C,MADX,IACkB,kBAAC,IAAD,CAAiBlJ,KAAMqG,EAAMrG,KAAMmG,MAAOE,EAAM+C,WAsI/DoM,GA7HUjP,IAAMmE,YAAW,SAACrE,EAAOsE,GAAO,IAAD,EAC5BpE,IAAMqE,UAAS,GADa,mBAC7CC,EAD6C,KACvCC,EADuC,OAEZvE,IAAMqE,SAC1C,CACIzB,OAAO,EACPI,aAAa,EACbzC,OAAO,EACP0C,UAAU,EACViM,OAAQ,EACRC,cAAe,EACfC,aAAa,CACT,CAAE1M,MAAO,MAAOC,MAAO,GAAIE,MAAO,WAClC,CAAEH,MAAO,MAAOC,MAAO,GAAIE,MAAO,YAEtCL,SAAS,CACL,CAAEE,MAAO,MAAOC,MAAO,GAAIE,MAAO,WAClC,CAAEH,MAAO,MAAOC,MAAO,GAAIE,MAAO,WAClC,CAAEH,MAAO,QAASC,MAAO,GAAIE,MAAO,YAExCE,OAAQ,CACJ,CAAEL,MAAO,MAAOC,MAAO,GAAIE,MAAO,WAClC,CAAEH,MAAO,MAAOC,MAAO,GAAIE,MAAO,WAClC,CAAEH,MAAO,QAASC,MAAO,GAAIE,MAAO,cAtBI,mBAE7CwM,EAF6C,KAE/BC,EAF+B,KA+BpDtP,IAAMwE,oBAAoBJ,GAAK,iBAAO,CAC5BK,gBAD4B,SACZC,GAAO,OAAD,2GAExBrJ,IAASsL,QAAQC,OAAO,yBAFA,SAGlB2I,IAHkB,OAIxBhL,GAAQ,GACRlJ,IAASsL,QAAQS,SALO,kDAShC,IAAMmI,EAAQ,uCAAC,4BAAA3S,EAAA,sEACQsD,EAAOsP,gBADf,OACLjN,EADK,OAEX+M,EAAgB/M,GAFL,2CAAD,qDAKd,OACI,kBAACoC,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OApBA,SAAAF,GACnBH,GAAQ,KAoBR,kBAACI,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,2CAEJ,kBAACH,EAAA,EAAMI,KAAP,KAEA,kBAAC0K,EAAA,EAAD,CAAUnB,SAAU,KAC1B,kBAACmB,EAAA,EAASC,KAAV,KACA,wBAAIlW,UAAU,YAAYoG,MAAO,CAACoP,UAAW,WAA7C,wBACM,kBAAC,EAAD,CAAkBtL,MAAM,SAASf,MAAO0M,EAAazM,OAAQnJ,KAAK,WAAWoJ,MAAO,CAACA,MAAM,SAAY+L,MAAM,QAC7G,kBAAC,EAAD,CAAkBlL,MAAM,eAAef,MAAO0M,EAAarM,aAAcvJ,KAAK,aAAaoJ,MAAO,CAACA,MAAM,SAAW+L,MAAM,QAC1H,kBAAC,EAAD,CAAkBlL,MAAM,SAASf,MAAO0M,EAAa9O,OAAQ9G,KAAK,OAAOoJ,MAAO,CAACA,MAAM,QAAW+L,MAAM,QACxG,kBAAC,EAAD,CAAkBlL,MAAM,YAAYf,MAAO0M,EAAapM,UAAWxJ,KAAK,WAAWoJ,MAAO,CAACA,MAAM,UAAY+L,MAAM,QACnH,kBAAC,EAAD,CAAkBlL,MAAM,SAASf,MAAO0M,EAAaH,OAAQzV,KAAK,OAAOoJ,MAAO,CAACA,MAAM,QAAU+L,MAAM,QACvG,kBAAC,EAAD,CAAkBlL,MAAM,gBAAgBf,MAAO0M,EAAaF,cAAe1V,KAAK,WAAWoJ,MAAO,CAACA,MAAM,UAAY+L,MAAM,SAIjI,kBAACa,EAAA,EAASC,KAAV,KACA,wBAAIlW,UAAU,YAAYoG,MAAO,CAACoP,UAAW,WAA7C,4BACA,kBAAC,WAAD,CAAUpP,MAAO,CAAC+O,OAAO,KACzBvT,KAAMiU,EAAaD,aACnB1L,MAAO,gBAAGiM,EAAH,EAAGA,UAAH,gBAAsBvB,KAAKwB,MAAMD,EAAUE,YAA3C,MACPC,WAAY,CACVC,SAAU,MACVC,WAAY,aACZC,KAAM,WAIV,yBAAKrQ,MAAO,CAACoP,UAAW,SAAU/F,WAAY,KAC7CoG,EAAaD,aAAa3M,KAAK,SAAAT,GAAS,OAAQ,kBAAC,EAAD,CAAYa,MAAOb,EAAKa,MAAOa,MAAQ1B,EAAKU,aAK3F,kBAAC+M,EAAA,EAASC,KAAV,KACA,wBAAIlW,UAAU,YAAYoG,MAAO,CAACoP,UAAW,WAA7C,8BACA,kBAAC,WAAD,CAAUpP,MAAO,CAAC+O,OAAO,KACzBvT,KAAMiU,EAAa7M,SACnBkB,MAAO,gBAAGiM,EAAH,EAAGA,UAAH,gBAAsBvB,KAAKwB,MAAMD,EAAUE,YAA3C,MACPC,WAAY,CACVC,SAAU,MACVC,WAAY,aACZC,KAAM,WAIV,yBAAKrQ,MAAO,CAACoP,UAAW,SAAU/F,WAAY,KAC7CoG,EAAa7M,SAASC,KAAK,SAAAT,GAAS,OAAQ,kBAAC,EAAD,CAAYa,MAAOb,EAAKa,MAAOa,MAAQ1B,EAAKU,aAKvF,kBAAC+M,EAAA,EAASC,KAAV,KACA,wBAAIlW,UAAU,YAAYoG,MAAO,CAACoP,UAAW,WAA7C,+BACA,kBAAC,WAAD,CAAUpP,MAAO,CAAC+O,OAAO,KACzBvT,KAAMiU,EAAatM,OACnBW,MAAO,gBAAGiM,EAAH,EAAGA,UAAH,gBAAsBvB,KAAKwB,MAAMD,EAAUE,YAA3C,MACPC,WAAY,CACVC,SAAU,MACVC,WAAY,aACZC,KAAM,WAKV,yBAAKrQ,MAAO,CAACoP,UAAW,SAAU/F,WAAY,KAC7CoG,EAAatM,OAAON,KAAK,SAAAT,GAAS,OAAQ,kBAAC,EAAD,CAAYa,MAAOb,EAAKa,MAAOa,MAAQ1B,EAAKU,mBCrEjFwN,GAAelQ,IAAMmE,YAAW,WAAwBC,GAAxB,IAAGrE,EAAH,EAAGA,SAAUmF,EAAb,EAAaA,QAAb,OAElC,0BAAMd,IAAKA,EAAKc,QAAS,SAAC+H,GACxBA,EAAEhD,iBACF/E,EAAQ+H,KAEV,kBAAC,IAAD,CAAiBxT,KAAK,QACrBsG,MAGUoQ,GAvEQ,SAACrQ,GAEpB,IAAMsQ,EAASpQ,IAAMqL,OAAO,MACtBgF,EAAgBrQ,IAAMqL,OAAO,MAC7BiF,EAAqBtQ,IAAMqL,OAAO,MAqBpC,OACI,yBAAK7R,UAAU,eACK,kBAAC+W,EAAA,EAAD,CAAU3Q,MAAO,CAACiP,MAAO,SACrB,kBAAC0B,EAAA,EAASC,OAAV,CAAiBrI,GAAI+H,GAAc/R,GAAG,mBACtC,kBAACoS,EAAA,EAASE,KAAV,KACI,kBAACF,EAAA,EAASb,KAAV,CAAexK,QAhB1B,WACN9K,OAAOsW,QAAQ,8CAE1BpX,EAAgBiB,iBAChBuF,EAAMiH,gBAYiEnH,MAAOE,EAAM/F,OAAS,CAAC0U,QAAS,QAAU,IAArF,IAA0F,kBAAC,IAAD,CAAiBhV,KAAK,SAAhH,wBACA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QAvB5B,SAAAR,GACnB0L,EAAS3E,QAAQhH,mBAsByD7E,MAAOE,EAAM/F,OAAS,CAAC0U,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAiBhV,KAAK,WAA9G,wBACA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QAAS,WACpB5L,EAAgBqX,0BAChB/Q,MAAOE,EAAM/F,OAAS,CAAC0U,QAAS,QAAU,IAAI,kBAAC,IAAD,CAAiBhV,KAAK,aAFxE,4BAGA,kBAAC8W,EAAA,EAASb,KAAV,CAAe9P,MAAOE,EAAM/F,OAAS,GAAK,CAAC0U,QAAS,QAASvJ,QAAS,WAClE7J,IAASsL,QAAQC,OAAO,sBACxBxM,OAAOC,aAAauW,WAAW,gBAC/BxW,OAAOyW,SAASC,WACjB,kBAAC,IAAD,CAAiBrX,KAAK,iBAJzB,qBAKA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QAASpF,EAAMiR,WAAW,kBAAC,IAAD,CAAiBtX,KAAK,eAA/D,oBACA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QA9BrB,SAAAR,GAC1B2L,EAAgB5E,QAAQhH,oBA6BwD,kBAAC,IAAD,CAAiBhL,KAAK,YAAtE,kBACA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QApBhB,SAAAR,GAC/B4L,EAAqB7E,QAAQhH,oBAmBwD,kBAAC,IAAD,CAAiBhL,KAAK,cAA3E,oBAEA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QAASpF,EAAM4L,WAAW,kBAAC,IAAD,CAAiBjS,KAAK,aAA/D,yBAGA,kBAAC8W,EAAA,EAASb,KAAV,CAAexK,QAAS,kBAAKrI,SAASuQ,eAAe,cAAcnP,UAAS,kBAAC,IAAD,CAAiBxE,KAAK,SAAlG,uCAGR,0BAAMmG,MAAO,CAACiP,MAAO,OAAQmC,WAAW,IAAxC,uBACA,kBAAC,EAAD,CAAe5M,IAAKgM,EAChBrJ,YAAajH,EAAMiH,cAEvB,kBAAC,EAAD,CAAgB3C,IAAKiM,EACjBtJ,YAAajH,EAAMiH,YAAa/B,YAAalF,EAAMmR,aACnD,kBAAC,GAAD,CAAmB7M,IAAKkM,MCtC7CY,GArBW,SAACpR,GACvB,IAAMqR,EAAQnR,IAAMqL,OAAO,MAQvB,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAgB4F,WAAYnR,EAAMmR,WAAYlK,YAAajH,EAAMiH,YAAa2E,UAT1E,WACZyF,EAAQ1F,QAAQE,SAQ4FoF,UANhG,WACZI,EAAQ1F,QAAQG,aAKkH7R,OAAQ+F,EAAM/F,SACxI,kBAAC,EAAD,CAAc0J,gBAAiB3D,EAAM2D,gBAAiBI,YAAa/D,EAAM+D,YAAaI,UAAWnE,EAAMmE,UAAW8C,YAAajH,EAAMiH,YAAa3C,IAAK+M,MC+FtJC,GApGE,SAAAtR,GAAU,IAAD,EAEAE,IAAMqE,SAASvE,EAAMwE,MAFrB,mBAEjBA,EAFiB,KAEXC,EAFW,OAGIvE,IAAMqE,SAAS,CACvC1J,OAAQ,GACR0W,SAAU,GACVC,SAAU,KANU,mBAGjB/H,EAHiB,KAGTG,EAHS,KA4BlBC,EAAe,SAAAjF,GACjB,IAAMkF,EAAQlF,EAAMkF,OACpBF,GAAU,SAAAI,GACR,OAAO,2BAAIA,GAAX,kBAAsBF,EAAOhB,KAAOgB,EAAOjH,YAG3C2D,EAAmB,WACrB/B,GAAQ,IAgBR,OAZJvE,IAAM2N,WAAU,WACTvT,OAAOC,aAAaC,QAAQ,WAC7BoP,GAAU,SAAAI,GACR,OAAO,2BAAIA,GAAX,IAAsBnP,OAAQP,OAAOC,aAAaC,QAAQ,iBAG7D,IACH0F,IAAM2N,WAAU,WACdpJ,EAAQzE,EAAMwE,QACb,CAACxE,EAAMwE,OAKJ,kBAACK,EAAA,EAAD,CAAOL,KAAMA,EAAMM,OAAQ0B,GAC3B,kBAAC3B,EAAA,EAAMpL,OAAP,CAAcsL,aAAW,GACrB,kBAACF,EAAA,EAAMG,MAAP,2BAEJ,kBAACH,EAAA,EAAMI,KAAP,KACA,kBAACkD,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACR,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACJ,kBAACN,EAAA,EAAK+B,QAAN,CAAepB,KAAK,SAASjG,MAAO4G,EAAO5O,OAAQkO,SAAUc,MAGrE,kBAAC1B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACN,EAAA,EAAK+B,QAAN,CAAepB,KAAK,WAAWjG,MAAO4G,EAAO8H,SAAUxI,SAAUc,MAGrE,kBAAC1B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,kBAGA,kBAACC,EAAA,EAAD,CAAKD,GAAG,KACR,kBAACN,EAAA,EAAK+B,QAAN,CAAeH,KAAK,WAAWjB,KAAK,WAAWjG,MAAO4G,EAAO+H,SAAUzI,SAAUc,MAIrF,yBAAKnQ,UAAU,eACX,kBAACuP,EAAA,EAAD,CAAQC,QAAQ,UAAUuI,OAAK,EAACrM,QA5EpC,SAAAR,GAER,GAA0B,IAAtB6E,EAAO5O,OAAO+L,QAAoC,IAAtB6C,EAAO8H,SAAS3K,MAAoC,IAAxB6C,EAAO+H,SAAS5K,OAAW,CACnF,IAAI8K,EAASjI,EAAO5O,OAAO+L,OACc,KAAtC8K,EAASC,OAAOD,EAAStS,OAAO,KAAYsS,EAAWA,EAASE,OAAO,EAAGF,EAAStS,OAAS,IAC/F7D,IAASsL,QAAQC,OAAO,uBACxB7L,IAAMS,KAAKgW,EAAS,kBAAmB,CAAEG,SAAUpI,EAAO8H,SAAUC,SAAU/H,EAAO+H,WACpFzX,MAAK,SAAA+X,GACFvW,IAASC,OAAO2L,QAAQ,iBAAc,8BAA2B,MACjE5L,IAASsL,QAAQS,SACjBd,IACAxG,EAAM+R,kBAAkBL,EAASI,EAAIxW,KAAKnB,UACjD6X,OAAM,SAAAC,GACP1W,IAASC,OAAOC,QAAQ,iBAAc,mCAAmC,MACzEF,IAASsL,QAAQS,eA8DL,qBAGA,kBAAC2B,EAAA,EAAD,CAAQC,QAAQ,YAAYuI,OAAK,EAACrM,QAASoB,GAA3C,4B,kBCnFpB0L,KAAQ1E,IAAI2E,KAAeC,KAAMC,KAAcC,KAAaC,KAAYC,KAAeC,KAAYC,KAAaC,KAAQC,KAAYC,KAAWC,KAAQC,KAAUC,KAAYC,KAAaC,KAAWC,KAAYC,KAAQC,KAAUC,KAAcC,KAAQC,MAEzPjY,IAASC,OAAOiY,KAAK,CACnB/N,gBAAiB,OACjBgO,QAAS,CACLC,WAAY,UACZC,aAAc,UACdC,YAAa,aAMnB,IAoFeC,GApFL,WAAM,IAAD,EAE+B5T,IAAMqE,SAAS,IAF9C,mBAENZ,EAFM,KAEUoQ,EAFV,OAGyB7T,IAAMqE,SAAS,IAHxC,mBAGJR,EAHI,KAGQiQ,EAHR,OAIsB9T,IAAMqE,SAAS,IAJrC,mBAIJJ,EAJI,KAIO8P,EAJP,OAKyB/T,IAAMqE,SAAS,IALxC,mBAKJ4M,EALI,KAKQ+C,EALR,OAMsBhU,IAAMqE,UAAS,GANrC,mBAMJ4P,EANI,KAMOC,EANP,OAOiBlU,IAAMqE,UAAS,GAPhC,mBAOJtK,EAPI,KAOIoa,EAPJ,KASLpN,EAAW,uCAAG,WAAOqN,GAAP,qBAAAxX,EAAA,8DACL6J,GAAT2N,IAAoBA,EAAQ,CAACpR,cAAc,EAAMR,UAAS,EAAMO,QAAO,EAAMiL,SAAQ,IACrE,MAAjB1U,EAFe,yBAIgCmN,GAA7CrM,OAAOC,aAAaC,QAAQ,iBAA4E,IAA7CF,OAAOC,aAAaC,QAAQ,gBAJ1E,gCAKOhB,EAAgB+a,iBAAiBja,OAAOC,aAAaC,QAAQ,UAAWF,OAAOC,aAAaC,QAAQ,iBAL3G,eAQZ6Z,GAAU,GACRG,GAAgB,IAEhBA,GAAgB,GAXN,uBAcZA,GAAgB,GAdJ,YAgBbF,EAAQpR,aAhBK,kCAiBiBG,EAAWoR,qBAjB5B,QAiBVC,EAjBU,OAkBdX,EAAmBW,GAlBL,YAoBbJ,EAAQ5R,SApBK,kCAqBamB,EAAQ8Q,iBArBrB,QAqBVC,EArBU,OAsBdZ,EAAeY,GAtBD,YAwBbN,EAAQrR,OAxBK,kCA0BSe,EAAME,eA1Bf,QA0Bb2Q,EA1Ba,OA2BjBZ,EAAaY,GA3BI,YA6BbP,EAAQpG,QA7BK,kCA8BS9N,EAAO0U,gBA9BhB,QA8BbC,EA9Ba,OA+BjBb,EAAca,GA/BG,QAiCjBxZ,IAASsL,QAAQS,SAjCA,4CAAH,sDAsCZyK,EAAiB,uCAAG,WAAOlX,EAAQV,GAAf,SAAA2C,EAAA,sEACLtD,EAAgB+a,iBAAiB1Z,EAAOV,GADnC,gBAGvB8M,EAAY,CAAC/D,cAAc,EAAMR,UAAS,EAAMO,QAAO,EAAMiL,SAAQ,IACrEmG,GAAU,IAJa,2CAAH,wDAOpBG,EAAkB,SAAAhQ,GACtB4P,EAAa5P,IAgBX,OAVJtE,IAAM2N,WAAU,WACdtS,IAASsL,QAAQC,OAAO,qBACxB,IAAIlN,EAASqN,KAEZ,IAQK,yBAAKvN,UAAU,OACb,kBAAC,GAAD,CAAY8K,KAAM2P,EAAWpC,kBAAmBA,IAC9C,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAmBZ,WAAYA,EAAYxN,gBAAiBA,EAAiBI,YAAaA,EAAaI,UAAWA,EAAW8C,YAAaA,EAAahN,OAAQA,MC/FvJ+a,QACW,cAA7B1a,OAAOyW,SAASkE,UAEe,UAA7B3a,OAAOyW,SAASkE,UAEhB3a,OAAOyW,SAASkE,SAASC,MACvB,2D,OCTNC,IAASC,OACL,kBAAC,GAAD,MACFrY,SAASuQ,eAAe,SDwHpB,kBAAmB+H,WACrBA,UAAUC,cAAcC,MACrBxb,MAAK,SAAAyb,GACJA,EAAaC,gBAEdzD,OAAM,SAAA0D,GACLhX,QAAQgX,MAAMA,EAAMC,c","file":"static/js/main.f4051daf.chunk.js","sourcesContent":["import initSqlJs from \"sql.js\";\nimport axios from \"axios\"\nimport Notiflix from \"notiflix-react\"\n\nlet currentDatabase\n\nclass Database{\n    constructor(callback){\n        \n        initSqlJs().then(SQL => {\n        this.online=false\n        this.url=\"\"\n        this.token=\"\"\n        this.SQL=SQL\n        this.response=false\n        let database=window.localStorage.getItem(\"rcchDB\")\n        \n        if(database==null){\n           this.createDatabase()\n        }else{\n            this.db=new this.SQL.Database(this.toBinArray(database));\n        }\n        this.db.run(\"PRAGMA foreign_keys = ON;\")\n        currentDatabase=this\n        if (callback!=null) callback()\n    })\n    }\n    async initOnlineServer(server, token){\n        if(!this.response){\n        this.online=true\n        this.url=server\n        this.token=token\n        window.localStorage.setItem(\"sessionToken\", token)\n        window.localStorage.setItem(\"server\",server)\n        const response= await this.testOnlineConnection()\n        this.response=response\n        if (!response){\n            this.online=false\n        }\n        }\n\n        return this.response\n    }\n    async testOnlineConnection(){\n        try{\n        const response=await axios.get(this.url+\"/misc/test\", {\n            headers: {\n              'access-token': this.token\n            }\n          })\n         return response.status==200\n        }catch(err){\n            return false\n        }\n    }\n    async getInformation(route){\n        try{\n            const response=await axios.get(this.url+route, {\n                headers: {\n                  'access-token': this.token\n                }\n              })\n             return response.data\n            }catch(err){\n                Notiflix.Report.Failure('Información','Sin conexión con el servidor. Vuelva a iniciar sesión','OK');\n                return false\n            }\n    }\n    async postInformation(route, data){\n        try{\n            const response=await axios.post(this.url+route,data, {\n                headers: {\n                  'access-token': this.token\n                }\n              })\n             return response.data\n            }catch(err){\n                Notiflix.Report.Failure('Información','Sin conexión con el servidor. Vuelva a iniciar sesión','OK');\n                return false\n            }\n    }\n    async deleteInformation(route){\n        try{\n            const response=await axios.delete(this.url+route, {\n                headers: {\n                  'access-token': this.token\n                }\n              })\n             return response.data\n            }catch(err){\n                Notiflix.Report.Failure('Información','Sin conexión con el servidor. Vuelva a iniciar sesión','OK');\n                return false\n            }\n    }\n    createDatabase(){\n        this.db=new this.SQL.Database()\n        this.buildInitialTables()\n        this.insertInitialData()\n        this.saveExistingDatabase()\n    }\n\n    importDatabase(files, callback){\n    \n        var f = files[0];\n        var r = new FileReader();\n        r.onload = () => {\n            var Uints = new Uint8Array(r.result);\n            this.db = new this.SQL.Database(Uints);\n            if (callback!==null) callback()\n            \n        }\n        r.readAsArrayBuffer(f);\n        \n    }\n    getBDID(){\n        return this.db.db\n    }\n    isOnline(){\n        return this.online\n    }\n    \n    executeCommand(command){\n        this.db.run(command)\n        this.saveExistingDatabase()\n    }\n    saveExistingDatabase(){\n        window.localStorage.setItem(\"rcchDB\",this.toBinString(this.db.export()));\n    }\n    exportExistingDatabase(){\n        var arraybuff = this.db.export();\n\t\tvar blob = new Blob([arraybuff]);\n\t\tvar a = document.createElement(\"a\");\n\t\tdocument.body.appendChild(a);\n        a.href = window.URL.createObjectURL(blob);\n        var date = new Date(); \n        var year=date.getFullYear()\n        var month=date.getMonth()+1;\n        if (month<10) month=\"0\"+month;\n        var day=date.getDate();\n        if (day<10) day=\"0\"+day;\n        let fecha=day+\"-\"+month+\"-\"+year;\n\n\t\ta.download = \"registro_\"+fecha+\".rcch\";\n\t\ta.onclick = function () {\n\t\t\tsetTimeout(function () {\n\t\t\t\twindow.URL.revokeObjectURL(a.href);\n\t\t\t}, 1500);\n\t\t};\n\t\ta.click();\n    }\n    buildInitialTables(){\n       this.db.run(\"CREATE TABLE publicadores (id integer primary key autoincrement, nombre varchar(255) NOT NULL, grupo int(11) not null default '0', invitado boolean);\")\n       this.db.run(\"CREATE TABLE medio (id integer primary key autoincrement, nombre varchar(255) NOT NULL, color varchar(255));\")\n       this.db.run(\"CREATE TABLE publico (id integer primary key autoincrement, nombre varchar(255) NOT NULL, color varchar(255));\")\n       this.db.run(\"CREATE TABLE records (id integer primary key autoincrement, hora datetime not null, publicador integer not null, medio integer NOT NULL, publico integer not null, textos integer not null, tipo integer not null, FOREIGN KEY (publicador) REFERENCES publicadores(id) ON DELETE CASCADE,FOREIGN KEY (publico) REFERENCES publico(id) ON DELETE CASCADE, FOREIGN KEY (medio) REFERENCES medio(id) ON DELETE CASCADE);\")\n    }\n    insertInitialData(){\n\n        this.db.run(\"insert into publico (nombre, color) values ('Público general', 'purple')\");\n        this.db.run(\"insert into publico (nombre, color) values ('Familiar', 'red')\");\n        this.db.run(\"insert into publico (nombre, color) values ('Conocido', 'green')\");\n        this.db.run(\"insert into publico (nombre, color) values ('Paciente', 'blue')\");\n        this.db.run(\"insert into publico (nombre, color) values ('Trabajador', 'grey')\");\n\n        this.db.run(\"insert into medio (nombre, color) values ('Personalmente', 'orange')\");\n        this.db.run(\"insert into medio (nombre, color) values ('WhatsApp', 'green')\");\n        this.db.run(\"insert into medio (nombre, color) values ('Email', 'blue')\");\n        this.db.run(\"insert into medio (nombre, color) values ('Teléfono', 'pink')\");\n        this.db.run(\"insert into medio (nombre, color) values ('Servicio postal', 'yellow')\");\n    }\n\n    getLastInsertedId(table){\n        let id=0\n        let stmt = this.db.prepare(\"SELECT max(id) as id from \"+table)\n        stmt.getAsObject()\n        \n        while(stmt.step()) { //\n            let row = stmt.getAsObject()\n            id=row.id\n            console.log(\"flag\")\n        }\n        stmt.free()\n        console.log(id)\n        return id\n    }\n    exec(sql){\n        let stmt = this.db.prepare(sql)\n        stmt.getAsObject()\n        let rows=[]\n        while(stmt.step()) { //\n            rows.push(stmt.getAsObject())\n        }\n        stmt.free()\n        return rows;\n        \n    }\n\n      toBinString (arr) {\n        var uarr = new Uint8Array(arr);\n        var strings = [], chunksize = 0xffff;\n        // There is a maximum stack size. We cannot call String.fromCharCode with as many arguments as we want\n        for (var i=0; i*chunksize < uarr.length; i++){\n            strings.push(String.fromCharCode.apply(null, uarr.subarray(i*chunksize, (i+1)*chunksize)));\n        }\n        return strings.join('');\n    }\n    \n    toBinArray (str) {\n        var l = str.length,\n                arr = new Uint8Array(l);\n        for (var i=0; i<l; i++) arr[i] = str.charCodeAt(i);\n        return arr;\n    }\n    \n}\nexport {Database, currentDatabase}","import React from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst Header=()=>{\n    return(\n     <nav className=\"navbar navbar-expand-md shadow-sm\" >\n            <div className=\"container\">\n                <div className=\"navbar-brand deco-none\">\n                    <FontAwesomeIcon icon=\"address-book\" /> Registro de Cartas Congregación La Herradura\n                </div>\n            </div>\n        </nav>\n    )\n}\nexport default Header","import React from \"react\"\n\nclass RegistroComponent extends React.Component{\n    render(){\n        return(\n            <div className=\"container\" style={{marginTop:\"2%\"}}>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default RegistroComponent","import {currentDatabase} from \"../Database\"\nclass Record{\n    constructor(id,hora,publicador,medio,publico,textos,video, publicacion,tipo, copias){\n        this.id=id\n        this.hora=hora\n        this.publicador=publicador\n        this.medio=medio\n        this.publico=publico\n        this.textos=textos\n        this.video=video\n        this.publicacion=publicacion\n        this.tipo=tipo\n        this.copias=copias\n    }\n    static async insert(publicador,medio,publico,textos,video, publicacion, tipo, copias){\n        if (currentDatabase.isOnline()){\n\n            const results=await currentDatabase.postInformation(\"/records\",{publicador: publicador, medio: medio, publico:publico, textos:textos, tipo:tipo, publicacionAdjunta: publicacion, videoAdjunto: video, copies: copias})\n            \n            return new Record(results.idRecord, results.publicador, results.medio, results.publico, results.textos, results.tipo, results.copias)\n            \n        }else{\n        \n            var date = new Date(); \n            var year=date.getFullYear()\n            var month=date.getMonth()+1;\n            if (month<10) month=\"0\"+month;\n            var day=date.getDate();\n            if (day<10) day=\"0\"+day;\n            var hours=date.getHours();\n            if(hours<10) hours=\"0\"+hours;\n            var minutes=date.getMinutes();\n            if (minutes<10) minutes=\"0\"+minutes;\n            var seconds=date.getSeconds();\n            if(seconds<10) seconds=\"0\"+seconds;\n            let hora=year+\"-\"+month+\"-\"+day+\" \"+hours + \":\"  + minutes + \":\"  + seconds;\n            currentDatabase.executeCommand(\"insert into records (hora, publicador, medio, publico, textos, tipo) values ('\"+hora+\"',\"+publicador+\",\"+medio+\",\"+publico+\",\"+textos+\",\"+tipo+\")\")\n            let id=currentDatabase.getLastInsertedId(\"records\")\n           return new Record(id, hora, publicador, medio, publico, textos,tipo)\n        }\n      \n    }\n    async delete(){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.deleteInformation(\"/records/\"+this.id)\n            return true\n        }else {\n        currentDatabase.executeCommand(\"delete from records where id=\"+this.id)\n        return true\n        }\n    }\n    static async getById(id){\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/records/\"+id)\n            return new Record(results.idRecord, results.publicador, results.medio, results.publico, results.textos, results.tipo)\n            \n        }else {\n        let results=currentDatabase.exec(\"select * from records where id=\"+id)\n        if (results.length==0) return false\n        return new Record(results[0].id, results[0].hora, results[0].publicador, results[0].medio, results[0].publico, results[0].textos, results[0].tipo)\n        }\n    }\n    static async getAllRecords(){\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/records/getLast\")\n            var lastResults=[]\n            results.forEach(item =>{\n                lastResults.push({...item, hora: item.hora_year+\"-\"+item.hora_month+\"-\"+item.hora_day+\" \"+ item.hora_hour+\":\"+ item.hora_minute+\":\"+ item.hora_second})\n            })\n            return lastResults\n        }else{\n            return currentDatabase.exec(\"select r.id, r.hora, r.textos, r.tipo, p.nombre as publicador, d.nombre as publico, m.nombre as medio from records r left join publicadores p on (r.publicador=p.id) left join publico d on (r.publico=d.id) left join medio m on (r.medio=m.id) order by 1 desc\")\n        }\n    }\n    static async getDailyStats(){\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/estadisticas/today\")\n            return results\n        }else{\n        var date = new Date(); \n            var year=date.getFullYear()\n            var month=date.getMonth()+1;\n            if (month<10) month=\"0\"+month;\n            var day=date.getDate();\n            if (day<10) day=\"0\"+day;\n            let fecha=year+\"-\"+month+\"-\"+day;\n            const stats=currentDatabase.exec(\"select count(*) as cartas, count(distinct(publicador)) as publicadores, sum(textos) as textos, SUM(CASE WHEN tipo = 1 THEN 1 ELSE 0 END) as revisitas, round(count(*)/count(distinct(publicador)),1) as porPublicador  from records where date(hora)=date('\"+fecha+\"')\")\n            let publicos=[]\n            let statsPublico=currentDatabase.exec(\"select p.nombre as publico, count (r.id) as cartas, p.color  from records r left join publico p on (r.publico=p.id) group by publico having date('\"+fecha+\"')=date(hora)\")\n            statsPublico.map(item =>{\n                publicos.push({\n                    title: item.publico,\n                    value: item.cartas,\n                    color: item.color\n                })\n            })\n            let statsMedio=currentDatabase.exec(\"select m.nombre as medio, count (r.id) as cartas, m.color  from records r left join medio m on (r.medio=m.id) group by medio having date('\"+fecha+\"')=date(hora)\")\n            let medios=[]\n            statsMedio.map(item =>{\n                medios.push({\n                    title: item.medio,\n                    value: item.cartas,\n                    color:item.color\n                })\n            })\n            return {\n                cartas:stats[0].cartas,\n            publicadores:stats[0].publicadores,\n            textos:stats[0].textos,\n            revisitas:stats[0].revisitas,\n            porPublicador:stats[0].porPublicador,\n            publicos: publicos,\n            medios: medios\n        \n            }\n        }\n        }\n}\nexport default Record","import {currentDatabase} from \"../Database\"\nclass Publicador{\n    constructor(id,nombre,grupo, invitado){\n        this.id=id\n        this.nombre=nombre\n        this.grupo=grupo\n        this.invitado=invitado\n    }\n    static async insert(nombre, grupo, isInvitado){\n        if (currentDatabase.isOnline()){\n\n            const results=await currentDatabase.postInformation(\"/publicadores\",{nombre: nombre, grupo: grupo, invitado: isInvitado})\n            \n            return new Publicador(results.idPublicador, results.nombre, results.grupo, results.invitado)\n            \n        }else{\n            currentDatabase.executeCommand(\"insert into publicadores (nombre,grupo, invitado) values ('\"+nombre+\"',\"+grupo+\", \"+isInvitado+\")\")\n            let id=currentDatabase.getLastInsertedId(\"publicadores\")\n            return new Publicador(id, nombre, grupo, isInvitado)\n        }\n         \n    }\n    async delete(){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.deleteInformation(\"/publicadores/\"+this.id)\n            return true\n        }else {\n            currentDatabase.executeCommand(\"delete from publicadores where id=\"+this.id)\n            return true\n        }\n    }\n    static async getById(id){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.getInformation(\"/publicadores/\"+id)\n            return new Publicador(result.idPublicador,result.nombre, result.grupo, result.invitado )\n        }else {\n            let results=currentDatabase.exec(\"select * from publicadores where id=\"+id)\n            if (results.length==0) return false\n            return new Publicador(results[0].id, results[0].nombre, results[0].isInvitado)\n        }\n\n    }\n    static async getAllPublicadores(){\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/publicadores/getAll\")\n            var allPublicadores=[]\n            results.forEach(item =>{\n                allPublicadores.push({value: item.idPublicador, label: item.nombre})\n            })\n            \n            return allPublicadores\n        }else{\n        return currentDatabase.exec(\"select id as value, nombre as label from publicadores\")\n        }\n    }\n}\nexport default Publicador","import {currentDatabase} from \"../Database\"\nclass Publico{\n    constructor(id,nombre, color){\n        this.id=id\n        this.nombre=nombre\n        this.color=color\n    }\n    static async insert(nombre, color){\n        if (currentDatabase.isOnline()){\n\n            const results=await currentDatabase.postInformation(\"/publicos\",{nombre: nombre, color: color})\n            \n            return new Publico(results.idPublico, results.nombre, results.color)\n            \n        }else{\n            currentDatabase.executeCommand(\"insert into publico (nombre, color) values ('\"+nombre+\"', '\"+color+\"')\")\n            let id=currentDatabase.getLastInsertedId(\"publico\")\n            return new Publico(id, nombre, color)\n        }\n         \n    }\n    async delete(){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.deleteInformation(\"/publicos/\"+this.id)\n            return true\n        }else {\n        currentDatabase.executeCommand(\"delete from publico where id=\"+this.id)\n        return true\n        }\n    }\n    static async getById(id){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.getInformation(\"/publicos/\"+id)\n            return new Publico(result.idPublico,result.nombre, result.color)\n        }else {\n        let results=currentDatabase.exec(\"select * from publico where id=\"+id)\n        if (results.length==0) return false\n        return new Publico(results[0].id, results[0].nombre, results[0].color)\n        }\n    }\n    static async getAllPublicos(){\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/publicos/getAll\")\n            var allPublicos=[]\n            results.forEach(item =>{\n                allPublicos.push({value: item.idPublico, label: item.nombre})\n            })\n            \n            return allPublicos\n        }else{\n        return currentDatabase.exec(\"select id as value, nombre as label from publico\")\n        }\n    }\n}\nexport default Publico","import {currentDatabase} from \"../Database\"\nclass Medio{\n    constructor(id,nombre, color){\n        this.id=id\n        this.nombre=nombre\n        this.color=color\n    }\n    static async insert(nombre, color){\n        if (currentDatabase.isOnline()){\n\n            const results=await currentDatabase.postInformation(\"/medios\",{nombre: nombre, color: color})\n            \n            return new Medio(results.idMedio, results.nombre, results.color)\n            \n        }else{\n            currentDatabase.executeCommand(\"insert into medio (nombre, color) values ('\"+nombre+\"', '\"+color+\"')\")\n            let id=currentDatabase.getLastInsertedId(\"medio\")\n            return new Medio(id, nombre, color)\n        }\n         \n    }\n    async delete(){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.deleteInformation(\"/medios/\"+this.id)\n            return true\n        }else {\n        currentDatabase.executeCommand(\"delete from medio where id=\"+this.id)\n        return true\n        }\n    }\n    static async getById(id){\n        if (currentDatabase.isOnline()){\n            const result=await currentDatabase.getInformation(\"/medios/\"+id)\n            return new Medio(result.idMedio,result.nombre, result.color)\n        }else {\n        let results=currentDatabase.exec(\"select * from medio where id=\"+id)\n        if (results.length==0) return false\n        return new Medio(results[0].id, results[0].nombre, results[0].color)\n        }\n    }\n    static getAllMedios=async() =>{\n        if (currentDatabase.isOnline()){\n            const results=await currentDatabase.getInformation(\"/medios/getAll\")\n            var allMedios=[]\n            results.forEach(item =>{\n                allMedios.push({value: item.idMedio, label: item.nombre})\n            })\n            \n            return allMedios\n        }else{\n            return currentDatabase.exec(\"select id as value, nombre as label from medio\")\n        }\n    }\n}\nexport default Medio","import React, {useEffect} from \"react\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\n\n\n\nconst ModalManage = React.forwardRef((props, ref) => {  \n    const [show, setShow] = React.useState(false)   \n\n    \n    const handleModalClose=event =>{\n        setShow(false)\n    }\n    React.useImperativeHandle(ref, () => ({\n        handleModalOpen(event){\n            setShow(true)\n        }\n    }))\n \n   \n        return (\n    \n            <Modal show={show} onHide={handleModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Gestionar {props.tipo}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.allElements.map(item => <a key={item.value} className=\"list-group-item list-group-item-action flex-column align-items-start\"><div key={\"div\"+item.value} className='d-flex w-100 justify-content-between' ><h5 key={\"h5\"+item.value} className='mb-1'>{item.label}</h5><small key={\"small\"+item.value} className='text-muted'><FontAwesomeIcon key={\"fw\"+item.value} onClick={() => props.deleteFunction(item.value)} icon=\"trash-alt\" /></small></div></a>)}\n            </Modal.Body>\n            </Modal>\n        )\n  })\n\n  export default ModalManage","import React, {useState} from \"react\"\nimport Publicador from \"../../models/Publicador\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport Select from \"react-select\"\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport {currentDatabase} from \"../../Database\"\n\n\n\nconst customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      backgroundColor: \"#181818\",\n      color: \"#AEBEAE\",\n      zIndex: 3\n    }),\n    option:(provided,state) =>({\n        ...provided,\n        backgroundColor: state.isFocused ? \"#222222\" : \"181818\",\n      color: \"#AEBEAE\"\n    }),\n    input: (provided, state)=> ({\n    ...provided,\n      color: \"#AEBEAE\"\n    }),\n    control: (provided, state) => ({\n      ...provided,\n      background: \"transparent\",\n      borderColor: \"#404040\"\n      \n    }),\n    singleValue: (provided, state) => {\n  \n      return { ...provided, color: \"#AEBEAE\" };\n    }\n  }\n\nconst ModalLista= React.forwardRef((props, ref)=>{\n    const [show, setShow] = React.useState(false) \n    const [lista, setLista] = React.useState([])\n    const [history, setHistory] = React.useState([])\n    \n    const handleModalClose=async (event) =>{\n        setShow(false)\n    }\n    const handleChange= event =>{\n        updateListaEspera(event);\n        Notiflix.Notify.Success(\"Publicador agregado a la lista\")\n       \n    }\n    const addGuest= async()=>{\n        const nombre= window.prompt(\"Ingrese nombre del invitado\")\n        if (nombre===null || nombre===undefined || nombre.trim()===\"\" ) return false\n        Notiflix.Loading.Arrows('Agregando invitado');\n        let newObject= await Publicador.insert(nombre, 0, true)\n        await props.refreshData({publicadores: true})\n        Notiflix.Notify.Success(\"Invitado agregado\")\n        updateListaEspera({\n            label: nombre,\n            value: newObject.id\n        })\n        return true\n    }\n    const containsObject = (obj, list) =>{\n        var i;\n        for (i = 0; i < list.length; i++) {\n            if (list[i] === obj) {\n                return true;\n            }\n        }\n    \n        return false;\n    }\n\n    React.useImperativeHandle(ref, () => ({\n        async handleModalOpen(event){\n            Notiflix.Loading.Arrows('Recuperando lista de espera');\n            await refreshServerLista()\n            setShow(true)\n            Notiflix.Loading.Remove()\n\n        }\n    }))\n\n    const updateServerLista = async (newLista) =>{\n        if(currentDatabase.isOnline()){\n            await currentDatabase.postInformation(\"/listas\", {lista: newLista})\n        }\n        return true\n    }\n    const refreshServerLista= async () =>{\n        if(currentDatabase.isOnline()){\n            let lista= await currentDatabase.getInformation(\"/listas\")\n            setLista(lista.lista)\n        }\n        return true\n    }\n\n \n\n    const updateListaEspera=publisher=>{\n        const newState=[]\n        for (let i=0; i<lista.length; i++){\n            newState.push(lista[i])\n         }\n            if(containsObject(publisher, newState)) return false;\n             if (checkParticipacion(publisher)){\n                 newState.push(publisher)\n             }else{\n                 var nobodyParticipated=true\n                 for (let i=0; i<newState.length; i++){\n                    if (checkParticipacion(newState[i])){\n                        newState.splice(i,0,publisher)\n                        nobodyParticipated=false\n                        break;\n                    }\n                 }\n                 if(nobodyParticipated){\n                     newState.push(publisher)\n                 }\n             }\n             \n             \n       setLista(newState)\n       updateServerLista(newState)       \n      }\n\n    const checkParticipacion = publisher =>{\n        return history.indexOf(publisher)!=-1;\n    }\n   \n    const deleteElement=(publisher) =>{\n        const newLista=[...lista]\n        newLista.splice(newLista.indexOf(publisher),1)\n        setLista(newLista)   \n        updateServerLista(newLista)  \n        return newLista\n        \n    }\n\n    const modifyCurrentName = (publisher) =>{\n        const newLista=deleteElement(publisher);\n        setHistory([...history, publisher])\n        props.replacePublicador(publisher)\n        handleModalClose()\n      }\n    return (\n        <Modal show={show} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Lista de espera</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Publicador\n                        </Form.Label>\n                        <Col sm=\"8\">\n                        <InputGroup>\n                            <Select options={props.allPublicadores} styles={customStyles} name=\"fldPublicador\"  onChange={handleChange} />\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={addGuest}><FontAwesomeIcon icon=\"hiking\"/></Button>           \n                            </InputGroup.Append>\n                        </InputGroup>   \n                       </Col> \n                    </Form.Group>\n\n                    <div  styles={{paddingTop:\"20%\"}}>\n    {lista.map((item,index) => (\n    <a key={item.value} \n        className='list-group-item list-group-item-action flex-column align-items-start'>\n        <div className='d-flex w-100 justify-content-between'>\n            <h5 className='mb-1' onClick={() => {modifyCurrentName(item)}}>\n                <span className='currentNumber'> {index+1}# </span> {item.label} \n            </h5><small className='text-muted'>\n            <FontAwesomeIcon icon='trash-alt' onClick={() => {deleteElement(item)}} /></small></div></a>))}\n                    </div>\n\n        </Modal.Body>\n        </Modal>\n    )\n})\n\nexport default ModalLista","import React, {useEffect} from \"react\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nconst ModalIngresar = (props) => { \n    \n    \n    var campos={}\n    props.fields.forEach(field => {\n            campos= {\n                ...campos,\n                [field.name]: field.default\n            }\n    })\n    const [fields, setFields]= React.useState(campos)\n    const handleChange = event => {\n        const target= event.target\n        if (target.type===\"checkbox\"){\n            setFields(prevState =>{\n                return {...prevState, [target.name]: target.checked}\n            })\n        }else{\n            setFields(prevState =>{\n                return {...prevState,[target.name]: target.value}\n            })\n        }\n    }\n    const handleModalClose=event =>{\n        props.setShow(false)\n        console.log(fields)\n    }\n    const handleSubmit=event =>{\n        event.preventDefault()\n        let result=props.submitFunction(fields)\n        if (result){\n            setFields(campos)\n        }\n    }\n    \n   \n        return (\n    \n            <Modal show={props.show} onHide={handleModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Agregar {props.tipo}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.fields.map((item, index) =>(\n                    <Form.Group as={Row} key={index}>\n                    <Form.Label column sm=\"4\">\n                        {item.label}\n                    </Form.Label>\n                    <Col sm=\"8\">\n                        <Form.Control type={item.type} name={item.name} value={fields.[item.name]} checked={fields.[item.name]} onChange={handleChange}/>\n                        \n                   </Col> \n                </Form.Group>\n                ))}\n                <div className=\"text-center\" >\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Agregar\n                    </Button>\n                </div>\n            </Modal.Body>\n            </Modal>\n        )\n  }\n\n  export default ModalIngresar","import React from \"react\"\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Record from \"../../models/Record\"\nimport Publicador from \"../../models/Publicador\"\nimport Publico from \"../../models/Publico\"\nimport Medio from \"../../models/Medio\"\nimport ModalManage from \"../Modals/ModalManage\"\nimport Notiflix from \"notiflix-react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Select from \"react-select\"\nimport ModalLista from \"../Modals/ModalLista\"\nimport ModalIngresar from \"../Modals/ModalIngresar\"\n\n\n\n  const customStyles = {\n    menu: (provided, state) => ({\n      ...provided,\n      backgroundColor: \"#181818\",\n      color: \"#AEBEAE\",\n      zIndex: 3\n    }),\n    option:(provided,state) =>({\n        ...provided,\n        backgroundColor: state.isFocused ? \"#222222\" : \"181818\",\n      color: \"#AEBEAE\"\n    }),\n    input: (provided, state)=> ({\n    ...provided,\n      color: \"#AEBEAE\"\n    }),\n    control: (provided, state) => ({\n      ...provided,\n      background: \"transparent\",\n      borderColor: \"#404040\"\n      \n    }),\n    singleValue: (provided, state) => {\n  \n      return { ...provided, color: \"#AEBEAE\" };\n    }\n  }\n\nconst  RegistroBody = React.forwardRef((props, ref) => {\n    const [showModalIngresarPublicador, setShowModalIngresarPublicador] =React.useState(false)\n    const [showModalIngresarMedio, setShowModalIngresarMedio] =React.useState(false)\n    const [showModalIngresarPublico, setShowModalIngresarPublico] =React.useState(false)\n    const [fldForm,setFldForm] = React.useState({\n        fldPublicador:{\n            value:\"0\",\n            label: \"Seleccione\"\n        },\n        fldDestinatario: 1,\n        fldMedio:1,\n        fldTextos:0,\n        fldPublicacion: false,\n        fldVideo: false,\n        fldTipo:\"0\",\n        fldCopias: 1\n    });\n\n    const modalRefPublicadores=React.useRef(null)\n    const modalRefMedios=React.useRef(null)\n    const modalRefPublicos=React.useRef(null)\n    const modalRefLista=React.useRef(null)\n\n \n\n    const handleModalOpen= tipo =>{\n        if (tipo==\"publicadores\"){\n            modalRefPublicadores.current.handleModalOpen()\n        }else{\n            if (tipo==\"publicos\"){\n                modalRefPublicos.current.handleModalOpen()\n            }else{\n                if(tipo==\"lista\"){\n                    modalRefLista.current.handleModalOpen()\n                }else{\n                    modalRefMedios.current.handleModalOpen()\n                }\n                \n            }\n        }\n        //modalRef.current.handleModalOpen()\n    }\n\n    const resetForm=()=>{\n            setFldForm({\n                fldPublicador:{\n                    value:\"0\",\n                    label: \"Seleccione\"\n                },\n                fldDestinatario: 1,\n                fldMedio:1,\n                fldTextos:0,\n                fldTipo:\"0\",\n                fldPublicacion: false,\n                fldVideo: false,\n                fldCopias: 1\n            })\n        }\n    React.useImperativeHandle(ref, () => ({\n        reset(){\n            resetForm()\n        },\n        openLista(){\n            handleModalOpen(\"lista\")\n        }\n    }))\n\n    const replacePublicador=(item)=>{\n        setFldForm({...fldForm,fldPublicador: item})\n    }\n  \n    \n    \n    const handleChange= event =>{\n        \n        if(\"target\" in event){\n            if(event.target.type === \"checkbox\"){\n                let {name, checked} = event.target\n                setFldForm({...fldForm,[name]: checked})\n            }else{\n                let {name, value} = event.target\n                setFldForm({...fldForm,[name]: value})\n            }\n            \n        }else{\n            setFldForm({...fldForm,fldPublicador: event})\n        }\n       \n    }\n    const handleSubmit= async (event) =>{\n        event.preventDefault()\n        if (fldForm.fldPublicador.value==0) return false\n        Notiflix.Loading.Arrows('Agregando registro');\n        \n        \n        let currentRecord=await Record.insert(fldForm.fldPublicador.value,fldForm.fldMedio, fldForm.fldDestinatario, fldForm.fldTextos, fldForm.fldVideo, fldForm.fldPublicacion, fldForm.fldTipo, fldForm.fldCopias)\n        Notiflix.Loading.Remove()\n        resetForm()\n        Notiflix.Notify.Success(\"Registro agregado\")\n    }\n    const increment=()=>{\n        setFldForm(prevState=>{\n            return {\n                ...fldForm,\n                fldTextos: prevState.fldTextos + 1\n            }\n        })\n        \n    }\n    const decrement=()=>{\n        setFldForm(prevState=>{\n            return {\n                ...fldForm,\n                fldTextos: prevState.fldTextos - 1\n            }\n        })\n    }\n    const incrementCopies=()=>{\n        setFldForm(prevState=>{\n            return {\n                ...fldForm,\n                fldCopias: prevState.fldCopias + 1\n            }\n        })\n        \n    }\n    const decrementCopies=()=>{\n        if (fldForm.fldCopias === 1) return false\n        setFldForm(prevState=>{\n            return {\n                ...fldForm,\n                fldCopias: prevState.fldCopias - 1\n            }\n        })\n    }\n    const deletePublicador=async (id) =>{\n        Notiflix.Loading.Arrows('Eliminando publicador');\n        let targetPublicador= await Publicador.getById(id)\n        if (targetPublicador!=false) await targetPublicador.delete()\n        Notiflix.Notify.Success(\"Publicador eliminado\")\n        Notiflix.Loading.Remove()\n        props.refreshData({publicadores: true})\n    }\n    const deleteMedio= async(id)=>{\n        Notiflix.Loading.Arrows('Eliminando medio');\n        let targetMedio=await Medio.getById(id)\n        if (targetMedio!=false) await targetMedio.delete()\n        Notiflix.Notify.Success(\"Medio eliminado\")\n        Notiflix.Loading.Remove()\n        props.refreshData({medios: true})\n    }\n    const deletePublico= async(id)=>{\n        Notiflix.Loading.Arrows('Eliminando público');\n        let targetPublico=await Publico.getById(id)\n        if (targetPublico!=false) await targetPublico.delete()\n        Notiflix.Notify.Success(\"Publico eliminado\")\n        Notiflix.Loading.Remove()\n        props.refreshData({publicos: true})\n    }\n    const openModalIngresar=(tipo)=>{\n        if (tipo===\"publicador\"){\n            setShowModalIngresarPublicador(true)\n        }else{\n            if (tipo===\"medio\"){\n                setShowModalIngresarMedio(true)\n            }else{\n                setShowModalIngresarPublico(true)\n            }\n        }\n    }\n    const addPublicador= async( fields)=>{\n        if (fields.nombre===null || fields.nombre===undefined || fields.nombre.trim()===\"\" ) return false\n        if (fields.grupo===null || fields.grupo===undefined || fields.grupo.trim()===\"\" ) return false\n        Notiflix.Loading.Arrows('Agregando publicador');\n        let newObject= await Publicador.insert(fields.nombre, fields.grupo, fields.isInvitado)\n        Notiflix.Loading.Remove()\n        await props.refreshData({publicadores: true})\n        Notiflix.Notify.Success(\"Publicador agregado\")\n        setFldForm({\n            ...fldForm,\n            fldPublicador:{\n                value: newObject.id,\n                label: newObject.nombre\n            }\n        })\n        return true\n    }\n    const addMedio= async(fields)=>{\n        if (fields.nombre===null || fields.nombre===undefined || fields.nombre.trim()===\"\" ) return false\n        if (fields.color===null || fields.color===undefined || fields.color.trim()===\"\" ) return false\n        Notiflix.Loading.Arrows('Agregando medio');\n       \n        let newObject=await Medio.insert(fields.nombre, fields.color)\n        Notiflix.Loading.Remove()\n        await props.refreshData({medios:true})\n        Notiflix.Notify.Success(\"Medio agregado\")\n        setFldForm({\n            ...fldForm,\n            fldMedio:newObject.id\n        })\n        return true\n    }\n    const addPublico= async(fields)=>{\n        if (fields.nombre===null || fields.nombre===undefined || fields.nombre.trim()===\"\" ) return false\n        if (fields.color===null || fields.color===undefined || fields.color.trim()===\"\" ) return false\n        Notiflix.Loading.Arrows('Agregando público');\n        let newObject=await Publico.insert(fields.nombre, fields.color)\n        Notiflix.Loading.Remove()\n        Notiflix.Notify.Success(\"Publico agregado\")\n        await props.refreshData({publicos: true})\n        \n        setFldForm({\n            ...fldForm,\n            fldDestinatario: newObject.id\n        })\n        return true\n    }\n        return(\n            <Form onSubmit={handleSubmit}>\n                \n            <div className=\"card-body\">\n                <div className=\"container\" >\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Publicador\n                        </Form.Label>\n                        <Col sm=\"8\">\n                        <InputGroup>\n                            <Select options={props.allPublicadores} styles={customStyles} name=\"fldPublicador\" value={fldForm.fldPublicador} onChange={handleChange} />\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={() => {openModalIngresar(\"publicador\")}}><FontAwesomeIcon icon=\"plus-square\"/></Button>                  \n                                <Button variant=\"outline-secondary\" onClick={()=> handleModalOpen(\"publicadores\")}><FontAwesomeIcon icon=\"pencil-alt\" /></Button>\n                                <Button variant=\"outline-secondary\" onClick={()=> handleModalOpen(\"lista\")}><FontAwesomeIcon icon=\"ellipsis-h\" /></Button>\n                               \n                                \n                                <ModalManage tipo=\"Publicadores\" allElements={props.allPublicadores} ref={modalRefPublicadores}\n                                        refreshData={props.refreshData} deleteFunction={deletePublicador}/>\n                                <ModalIngresar \n                                show={showModalIngresarPublicador} \n                                setShow={setShowModalIngresarPublicador} \n                                tipo=\"Publicador\"\n                                submitFunction={addPublicador}\n                                fields={[\n                                    {name: \"nombre\", type: \"text\", label: \"Nombre\", default: \"\"}, \n                                    {name: \"grupo\", type: \"number\", label: \"Grupo\", default: \"0\"}, \n                                    {name: \"isInvitado\", type: \"checkbox\", label: \"¿Es invitado?\", default:false}]} \n                                />\n\n                            </InputGroup.Append>\n                        </InputGroup>   \n                       </Col> \n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Destinatario\n                        </Form.Label>\n                        <Col sm=\"8\">\n                            <InputGroup>\n                            <Form.Control as=\"select\" name=\"fldDestinatario\" value={fldForm.fldDestinatario} onChange={handleChange}>\n                                { props.allPublicos.map(item => <option key={item.value} value={item.value}>{item.label}</option> ) }\n                            </Form.Control>\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={() => {openModalIngresar(\"publico\")}}><FontAwesomeIcon icon=\"plus-square\" /></Button>\n                                <Button variant=\"outline-secondary\" onClick={()=> handleModalOpen(\"publicos\")}><FontAwesomeIcon icon=\"pencil-alt\" /></Button>\n                                <ModalManage tipo=\"Destinatarios\" allElements={props.allPublicos} ref={modalRefPublicos}\n                                    refreshData={props.refreshData} deleteFunction={deletePublico}/>\n                                    <ModalIngresar \n                                show={showModalIngresarPublico} \n                                setShow={setShowModalIngresarPublico} \n                                tipo=\"Destinatario\"\n                                submitFunction={addPublico}\n                                fields={[\n                                    {name: \"nombre\", type: \"text\", label: \"Nombre\", default: \"\"}, \n                                    {name: \"color\", type: \"color\", label: \"Color\", default:\"\"}]} \n                                />\n                            </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Medio\n                        </Form.Label>\n                        <Col sm=\"8\">\n                            <InputGroup>\n                            <Form.Control as=\"select\" name=\"fldMedio\" value={fldForm.fldMedio} onChange={handleChange}>\n                            { props.allMedios.map(item => <option key={item.value} value={item.value}>{item.label}</option> ) }\n                            \n                            </Form.Control>\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={() => {openModalIngresar(\"medio\")}}><FontAwesomeIcon icon=\"plus-square\" /></Button>\n                                <Button variant=\"outline-secondary\" onClick={()=> handleModalOpen(\"medios\")}><FontAwesomeIcon icon=\"pencil-alt\" /></Button>\n                                <ModalManage tipo=\"Medios\" allElements={props.allMedios} ref={modalRefMedios}\n                                    refreshData={props.refreshData} deleteFunction={deleteMedio}/>\n                                <ModalIngresar \n                                show={showModalIngresarMedio} \n                                setShow={setShowModalIngresarMedio} \n                                tipo=\"Medio\"\n                                submitFunction={addMedio}\n                                fields={[\n                                    {name: \"nombre\", type: \"text\", label: \"Nombre\", default: \"\"}, \n                                    {name: \"color\", type: \"color\", label: \"Color\", default:\"\"}]} \n                                />\n                            </InputGroup.Append>\n                            </InputGroup>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Textos bíblicos\n                        </Form.Label>\n                        <Col sm=\"8\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <Button variant=\"outline-secondary\" onClick={decrement}>-</Button>\n                            </InputGroup.Prepend>\n                            <FormControl name=\"fldTextos\" value={fldForm.fldTextos} onChange={handleChange}/>\n                                \n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={increment}>+</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Adjunto\n                        </Form.Label>\n                        <Col sm=\"8\">\n                            <Form.Check \n                                type=\"switch\"\n                                id=\"switchVideo\"\n                                label=\"Vídeo\"\n                                name=\"fldVideo\"\n                                checked={fldForm.fldVideo}\n                                onChange={handleChange}\n                            />\n                            <Form.Check \n                                type=\"switch\"\n                                label=\"Publicación\"\n                                id=\"switchPublicacion\"\n                                name=\"fldPublicacion\"\n                                checked={fldForm.fldPublicacion}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Tipo\n                        </Form.Label>\n                        <Col sm=\"8\">\n                                <Form.Check \n                                    type=\"radio\"\n                                    name=\"fldTipo\"\n                                    label=\"Primera visita\"\n                                    value=\"0\"\n                                    checked={fldForm.fldTipo===\"0\"}\n                                    onChange={handleChange}\n                                />\n\n                                <Form.Check\n                                    type=\"radio\"\n                                    label=\"Revisita\"\n                                    name=\"fldTipo\"\n                                    value=\"1\"\n                                    checked={fldForm.fldTipo===\"1\"}\n                                    onChange={handleChange}\n                                />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Form.Label column sm=\"4\">\n                            Copias\n                        </Form.Label>\n                        <Col sm=\"8\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <Button variant=\"outline-secondary\" onClick={decrementCopies}>-</Button>\n                            </InputGroup.Prepend>\n                            <FormControl name=\"fldCopias\" value={fldForm.fldCopias} onChange={handleChange}/>\n                                \n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\" onClick={incrementCopies}>+</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                        </Col>\n                    </Form.Group>\n                </div>\n                <div className=\"text-center\" >\n                    <Button variant=\"primary\" type=\"submit\">\n                        Guardar registro\n                    </Button>\n                </div>\n            </div>\n            <ModalLista allPublicadores={props.allPublicadores} ref={modalRefLista}\n                                       addPublicador={addPublicador} refreshData={props.refreshData} replacePublicador={replacePublicador} />\n         \n            \n            </Form>\n        )\n})\nexport default RegistroBody","import React, {useEffect} from \"react\"\nimport Modal from 'react-bootstrap/Modal'\nimport {currentDatabase} from '../../Database'\nimport Notiflix from \"notiflix-react\"\n\n\n\n\n\nconst ModalImportDB = React.forwardRef((props, ref) => {  \n    const [show, setShow] = React.useState(false)\n    const handleChange=e=>{\n        let files=e.target.files\n        handleFiles(files)\n    }\n    \n\n    \n    const handleModalClose=event =>{\n        setShow(false)\n    }\n    React.useImperativeHandle(ref, () => ({\n        handleModalOpen(event){\n            setShow(true)\n        }\n    }))\n    const handleFiles=(files)=>{\n        currentDatabase.importDatabase(files, props.refreshData)\n        \n        handleModalClose()\n        Notiflix.Report.Success('Información','Base de datos importada con éxito','OK');\n    }\n    \n    const handleDrop=(e)=>{\n        let dt = e.dataTransfer\n  let files = dt.files\nhandleFiles(files)\n\n    }\n\n    const highlight =(e)=>{\n        document.getElementById('drop-area').classList.add('highlight')\n      }\n      \n    const unhighlight=(e) => {\n        document.getElementById('drop-area').classList.remove('highlight')\n      }\n     const preventDefaults= (e) => {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      useEffect(() => {\n\n        if (show){\n            ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n                document.getElementById('drop-area').addEventListener(eventName, preventDefaults, false)\n            })\n            \n            ;['dragenter', 'dragover'].forEach(eventName => {\n                document.getElementById('drop-area').addEventListener(eventName, highlight, false)\n            })\n\n            ;['dragleave', 'drop'].forEach(eventName => {\n                document.getElementById('drop-area').addEventListener(eventName, unhighlight, false)\n            })\n\n            document.getElementById('drop-area').addEventListener('drop', handleDrop, false)\n            \n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [show])\n   \n        return (\n    \n            <Modal show={show} onHide={handleModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Importar base de datos</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <div id=\"drop-area\">\n                <form className=\"my-form\">\n                    <p>Arrastre el archivo con extensión .RCCH o pulse el siguiente botón para buscarlo</p>\n                    <input type=\"file\" id=\"fileElem\" name=\"fileElem\" onChange={handleChange} />\n                    <label className=\"btn btn-primary\" htmlFor=\"fileElem\">Buscar archivo</label>\n                </form>\n                </div>\n            </Modal.Body>\n            </Modal>\n        )\n  })\n\n  export default ModalImportDB","import React, {useEffect} from \"react\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Record from \"../../models/Record\"\nimport {timeSince} from \"../../Utils\"\n\n\n\n\n\nconst ModalHistorial = React.forwardRef((props, ref) => {  \n    const [show, setShow] = React.useState(false) \n\n    \n    const handleModalClose=event =>{\n        setShow(false)\n    }\n    React.useImperativeHandle(ref, () => ({\n        async handleModalOpen(event){\n            Notiflix.Loading.Arrows('Cargando datos');\n            props.refreshData({records: true})\n            setShow(true)\n            Notiflix.Loading.Remove()\n        }\n    }))\n\n    const deleteRecord=async (id) =>{\n        Notiflix.Loading.Arrows('Eliminando registro');\n        let targetRecord=await Record.getById(id)\n        if (targetRecord!=false) await targetRecord.delete()\n        Notiflix.Notify.Success(\"Carta eliminada\")\n        Notiflix.Loading.Remove()\n        props.refreshData({records: true})\n    }\n\n   \n \n   \n        return (\n    \n            <Modal show={show} onHide={handleModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Historial de cartas</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n        {props.allElements.map(item => <a key={item.id} className=\"list-group-item list-group-item-action flex-column align-items-start\"><div key={\"div\"+item.id} className='d-flex w-100 justify-content-between' ><h5 key={\"h5\"+item.id} className='mb-1'>{item.publicador}</h5><small key={\"small\"+item.id} className='text-muted'> {timeSince(item.hora)} <FontAwesomeIcon key={\"fw\"+item.id} onClick={() => deleteRecord(item.id)} icon=\"trash-alt\" /></small></div><p className='mb-1'><font color={item.tipo==0 ? \"purple\" : \"orange\"}>{item.tipo==0 ? \"Primera visita\" : \"Revisita\"}</font> a {item.publico}</p><small className='text-muted'>Enviada por {item.medio}</small></a>)}\n            </Modal.Body>\n            </Modal>\n        )\n  })\n\n  export default ModalHistorial","\nconst timeSince=date => {\n    if (typeof date !== 'object') {\n        date = new Date(date);\n      }\n\n      var seconds = Math.floor((new Date() - date) / 1000);\n      var intervalType;\n    \n      var interval = Math.floor(seconds / 31536000);\n      if (interval >= 1) {\n        intervalType = 'año';\n      } else {\n        interval = Math.floor(seconds / 2592000);\n        if (interval >= 1) {\n          intervalType = 'mes';\n        } else {\n          interval = Math.floor(seconds / 86400);\n          if (interval >= 1) {\n            intervalType = 'día';\n          } else {\n            interval = Math.floor(seconds / 3600);\n            if (interval >= 1) {\n              intervalType = \"hora\";\n            } else {\n              interval = Math.floor(seconds / 60);\n              if (interval >= 1) {\n                intervalType = \"minuto\";\n              } else {\n                interval = seconds;\n                intervalType = \"segundo\";\n              }\n            }\n          }\n        }\n      }\n    \n      if (interval > 1 || interval === 0) {\n        intervalType += 's';\n      }\n    \n      return \"Hace \"+ interval + ' ' + intervalType;\n}\n\nexport {timeSince} ","import React from \"react\"\n\nconst ChartLabel= (props) =>{\n    return (\n        <div style={{display: \"inline-block\", paddingRight: 20}}>\n            <div style={{\n  height: \"1.5em\",\n  width: 30,\n  backgroundColor: props.color,\n  float: \"left\"\n}}></div>\n            \n            <div style={{paddingLeft: 10, float: \"left\"}}>{props.label} </div>\n        </div>\n    )\n}\n\nexport default ChartLabel","import React, {useState} from \"react\"\nimport Record from \"../../models/Record\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport Carousel from 'react-bootstrap/Carousel'\nimport ChartLabel from \"../Otros/ChartLabel\"\n\nimport { PieChart } from 'react-minimal-pie-chart'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst EstadisticasItem= (props) =>{\n    return (\n        <div style={{float:\"left\", width: props.width, textAlign: \"center\", height: 80, marginTop:10}}> \n            <h4>{props.label}</h4>\n            <h4 styles={{marginTop: 10}}>\n                {props.value} <FontAwesomeIcon icon={props.icon} style={props.color} />\n            </h4>\n        </div>\n    )\n}\n\n\n\n\nconst ModalEstadisticas= React.forwardRef((props, ref)=>{\n    const [show, setShow] = React.useState(false) \n    const [estadisticas, setEstadisticas] = React.useState(\n        {\n            cartas:0,\n            publicadores:0,\n            textos:0,\n            revisitas:0,\n            videos: 0,\n            publicaciones: 0,\n            revisitaDiff:[\n                { title: 'One', value: 10, color: '#6f42c1' },\n                { title: 'Two', value: 15, color: '#fd7e14' },\n            ],\n            publicos:[\n                { title: 'One', value: 10, color: '#E38627' },\n                { title: 'Two', value: 15, color: '#C13C37' },\n                { title: 'Three', value: 20, color: '#6A2135' }\n            ],\n            medios: [\n                { title: 'One', value: 10, color: '#E38627' },\n                { title: 'Two', value: 15, color: '#C13C37' },\n                { title: 'Three', value: 20, color: '#6A2135' }\n            ]\n        })\n    \n       \n    const handleModalClose=event =>{\n        setShow(false)\n    }\n\n    React.useImperativeHandle(ref, () => ({\n        async handleModalOpen(event){\n            \n            Notiflix.Loading.Arrows('Cargando estadisticas');\n            await loadData()\n            setShow(true)\n            Notiflix.Loading.Remove()\n        }\n    }))\n\n    const loadData=async ()=>{\n        const stats= await Record.getDailyStats()\n        setEstadisticas(stats)\n        \n    }\n    return (\n        <Modal show={show} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Estadísticas del día de hoy</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Carousel interval={5000000000}>\n  <Carousel.Item>\n  <h1 className=\"display-5\" style={{textAlign: \"center\"}}>¿Cómo nos fue?</h1>\n        <EstadisticasItem label=\"Cartas\" value={estadisticas.cartas} icon=\"envelope\" color={{color:\"brown\"}}   width=\"50%\"/>\n        <EstadisticasItem label=\"Publicadores\" value={estadisticas.publicadores} icon=\"hand-paper\" color={{color:\"green\"}}  width=\"50%\" />\n        <EstadisticasItem label=\"Textos\" value={estadisticas.textos} icon=\"book\" color={{color:\"grey\"}}   width=\"50%\"/>\n        <EstadisticasItem label=\"Revisitas\" value={estadisticas.revisitas} icon=\"undo-alt\" color={{color:\"orange\"}}  width=\"50%\" />\n        <EstadisticasItem label=\"Videos\" value={estadisticas.videos} icon=\"film\" color={{color:\"cyan\"}}  width=\"50%\" />\n        <EstadisticasItem label=\"Publicaciones\" value={estadisticas.publicaciones} icon=\"file-alt\" color={{color:\"indigo\"}}  width=\"50%\" />\n        \n    \n  </Carousel.Item>\n  <Carousel.Item>\n  <h1 className=\"display-5\" style={{textAlign: \"center\"}}>¿Hemos hablado antes?</h1>\n  <PieChart style={{height:300}}\n  data={estadisticas.revisitaDiff}\n  label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n  labelStyle={{\n    fontSize: '5px',\n    fontFamily: 'sans-serif',\n    fill: \"white\"\n  }\n  }\n/>\n<div style={{textAlign: \"center\", paddingTop: 10}}>\n{estadisticas.revisitaDiff.map (item =>{ return (<ChartLabel color={item.color} label ={item.title} />) })}\n</div>\n\n\n  </Carousel.Item>\n  <Carousel.Item>\n  <h1 className=\"display-5\" style={{textAlign: \"center\"}}>¿A quién enviaremos?</h1>\n  <PieChart style={{height:300}}\n  data={estadisticas.publicos}\n  label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n  labelStyle={{\n    fontSize: '5px',\n    fontFamily: 'sans-serif',\n    fill: \"white\"\n  }\n  }\n/>\n<div style={{textAlign: \"center\", paddingTop: 10}}>\n{estadisticas.publicos.map (item =>{ return (<ChartLabel color={item.color} label ={item.title} />) })}\n</div>\n\n\n  </Carousel.Item>\n  <Carousel.Item>\n  <h1 className=\"display-5\" style={{textAlign: \"center\"}}>¿Cómo se enviarán?</h1>\n  <PieChart style={{height:300}}\n  data={estadisticas.medios}\n  label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n  labelStyle={{\n    fontSize: '5px',\n    fontFamily: 'sans-serif',\n    fill: \"white\"\n  }\n  }\n/>\n\n<div style={{textAlign: \"center\", paddingTop: 10}}>\n{estadisticas.medios.map (item =>{ return (<ChartLabel color={item.color} label ={item.title} />) })}\n</div>\n  </Carousel.Item>\n</Carousel>\n\n        </Modal.Body>\n        </Modal>\n    )\n})\n\nexport default ModalEstadisticas","import React from \"react\"\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ModalImportDB from \"../Modals/ModalImportDB\"\nimport ModalHistorial from \"../Modals/ModalHistorial\"\nimport ModalEstadisticas from \"../Modals/ModalEstadisticas\"\nimport {currentDatabase} from \"../../Database\"\nimport Notiflix from \"notiflix-react\"\n\n\nconst RegistroHeader = (props)=>{\n   \n    const modalRef=React.useRef(null)\n    const modalHistoryRef=React.useRef(null)\n    const modalEstadisticasRef=React.useRef(null)\n\n    \n\n    const handleModalOpen= event =>{\n        modalRef.current.handleModalOpen()\n    }\n    const handleModalHistoryOpen= event =>{\n        modalHistoryRef.current.handleModalOpen()\n    }\n    const createNewDatabase= () => {\n    const confirmacion=window.confirm(\"Se borrarán todos los datos guardados\");\n        if (confirmacion){\n            currentDatabase.createDatabase()\n            props.refreshData()\n        }\n        \n    }\n    const handleModalEstadisticasOpen= event =>{\n        modalEstadisticasRef.current.handleModalOpen()\n    }\n        return(\n            <div className=\"card-header\">\n                                <Dropdown style={{float: \"left\"}}>\n                                    <Dropdown.Toggle as={CustomToggle} id=\"dropdown-basic\" />\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item onClick={createNewDatabase} style={props.online ? {display: \"none\"} : {}}> <FontAwesomeIcon icon=\"file\" /> Nueva base de datos</Dropdown.Item>\n                                        <Dropdown.Item onClick={handleModalOpen}  style={props.online ? {display: \"none\"} : {}}><FontAwesomeIcon icon=\"folder\" /> Abrir base de datos</Dropdown.Item>\n                                        <Dropdown.Item onClick={() =>{\n                                            currentDatabase.exportExistingDatabase()\n                                        }}  style={props.online ? {display: \"none\"} : {}}><FontAwesomeIcon icon=\"download\" /> Descargar base de datos</Dropdown.Item>\n                                        <Dropdown.Item style={props.online ? {} : {display: \"none\"}} onClick={() =>{\n                                            Notiflix.Loading.Arrows('Cerrando sesión');\n                                            window.localStorage.removeItem(\"sessionToken\")\n                                            window.location.reload()\n                                        }}><FontAwesomeIcon icon=\"sign-out-alt\" /> Cerrar sesión</Dropdown.Item>\n                                        <Dropdown.Item onClick={props.showLista}><FontAwesomeIcon icon=\"ellipsis-h\" /> Lista de espera</Dropdown.Item>\n                                        <Dropdown.Item onClick={handleModalHistoryOpen}><FontAwesomeIcon icon=\"history\" /> Ver historial</Dropdown.Item>\n                                        <Dropdown.Item onClick={handleModalEstadisticasOpen}><FontAwesomeIcon icon=\"chart-pie\" /> Estadísticas</Dropdown.Item>\n                                        \n                                        <Dropdown.Item onClick={props.resetForm}><FontAwesomeIcon icon=\"undo-alt\" /> Reiniciar formulario</Dropdown.Item>\n                                        \n                                       \n                                        <Dropdown.Item onClick={()=> document.getElementById(\"darkSwitch\").click()}><FontAwesomeIcon icon=\"moon\" /> Activar/desactivar modo nocturno</Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                                <span style={{float: \"left\", marginLeft:5}}> Registro de cartas</span> \n                                <ModalImportDB ref={modalRef}\n                                    refreshData={props.refreshData}\n                                    />\n                                <ModalHistorial ref={modalHistoryRef}\n                                    refreshData={props.refreshData} allElements={props.allLetters} />\n                                    <ModalEstadisticas ref={modalEstadisticasRef} />\n                            </div>\n        )\n}\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n\n    <span ref={ref} onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}>\n    <FontAwesomeIcon icon=\"cog\" />\n    {children}\n    </span>\n  ));\nexport default RegistroHeader","import React from \"react\"\nimport RegistroComponent from \"./RegistroComponent\"\nimport RegistroBody from \"./RegistroBody\"\nimport RegistroHeader from \"./RegistroHeader\"\n\n\n    \nconst RegistroContainer = (props)=> {\n    const bodyRef=React.useRef(null)\n    const resetForm=()=>{\n        bodyRef.current.reset();\n    }\n    const showLista=()=>{\n        bodyRef.current.openLista()\n    }\n    \n        return(\n            <RegistroComponent>\n                <RegistroHeader allLetters={props.allLetters} refreshData={props.refreshData} resetForm={resetForm} showLista={showLista} online={props.online}/>\n                <RegistroBody allPublicadores={props.allPublicadores} allPublicos={props.allPublicos} allMedios={props.allMedios} refreshData={props.refreshData} ref={bodyRef}/>\n            </RegistroComponent>\n                      \n        )\n}\n\n\n\n\nexport default RegistroContainer","import React, {useEffect} from \"react\"\nimport Modal from 'react-bootstrap/Modal'\nimport Notiflix from \"notiflix-react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport axios from \"axios\"\n\n\n\n\nconst ModalLogin = props => {  \n    \n    const [show, setShow] = React.useState(props.show)   \n    const [fields, setFields] = React.useState({\n        server: \"\",\n        userName: \"\",\n        password: \"\"\n    })\n    const logIn=event =>{\n       \n        if (fields.server.trim()!=\"\" && fields.userName.trim!=\"\" && fields.password.trim()!=\"\"){\n            let servidor=fields.server.trim()\n            if(servidor.charAt(servidor.length-1) == \"/\"){ servidor = servidor.substr(0, servidor.length - 1);}\n            Notiflix.Loading.Arrows('Iniciando sesión');\n            axios.post(servidor+\"/usuarios/login\", { username: fields.userName, password: fields.password })\n            .then(res => {\n                Notiflix.Report.Success('Información','Inicio de sesión exitoso','OK');\n                Notiflix.Loading.Remove();\n                handleModalClose()\n                props.handleServerLogin(servidor,res.data.token)\n      }).catch(err => {\n        Notiflix.Report.Failure('Información','Credenciales erroneas, reintente','OK');\n        Notiflix.Loading.Remove();\n    })\n        }\n    }\n\n\n    const handleChange = event => {\n        const target= event.target\n        setFields(prevState =>{\n          return {...prevState,[target.name]: target.value}\n        })\n    }\n    const handleModalClose = () =>{\n        setShow(false)\n    }\n \n\n    React.useEffect(() => {\n        if(window.localStorage.getItem(\"server\")){\n          setFields(prevState =>{\n            return {...prevState, server: window.localStorage.getItem(\"server\") }\n          })\n        }\n      }, [])\n      React.useEffect(() => {\n        setShow(props.show)\n      }, [props.show])\n\n   \n        return (\n    \n            <Modal show={show} onHide={handleModalClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Iniciar sesión</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form.Group as={Row}>\n                    <Form.Label column sm=\"4\">\n                        Servidor: \n                    </Form.Label>\n                    <Col sm=\"8\">\n                        <Form.Control  name=\"server\" value={fields.server} onChange={handleChange}/>\n                   </Col> \n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"4\">\n                        Usuario: \n                    </Form.Label>\n                    <Col sm=\"8\">\n                    <Form.Control  name=\"userName\" value={fields.userName} onChange={handleChange}/>\n                   </Col> \n                </Form.Group>\n                <Form.Group as={Row}>\n                    <Form.Label column sm=\"4\">\n                        Contraseña: \n                    </Form.Label>\n                    <Col sm=\"8\">\n                    <Form.Control  type=\"password\" name=\"password\" value={fields.password} onChange={handleChange}/>\n                   </Col> \n                </Form.Group>\n\n                <div className=\"text-center\" >\n                    <Button variant=\"primary\" block onClick={logIn}>\n                        Iniciar sesión\n                    </Button>\n                    <Button variant=\"secondary\" block onClick={handleModalClose}>\n                        Usar sin conexión\n                    </Button>\n                </div>\n\n           </Modal.Body>\n            </Modal>\n            \n            \n            \n        )\n  }\n\n  export default ModalLogin","import React from 'react';\nimport './App.css';\nimport Notiflix from \"notiflix-react\"\nimport Header from \"./components/Header\"\nimport {Database} from \"./Database\"\nimport RegistroContainer from \"./components/Registro/RegistroContainer\"\nimport ModalLogin from \"./components/Modals/ModalLogin\"\nimport Publicador from \"./models/Publicador\"\nimport Publico from \"./models/Publico\"\nimport Medio from \"./models/Medio\"\nimport Record from \"./models/Record\"\nimport {currentDatabase} from './Database'\n\n\n\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faAddressBook, faCog, faPlusSquare, faPencilAlt, faTrashAlt, faCommentDots, faEnvelope, faHandPaper, faBook, faUserEdit, faUndoAlt, faFile, faFolder, faDownload, faEllipsisH, faHistory, faChartPie, faMoon, faHiking, faSignOutAlt, faFilm, faFileAlt} from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faAddressBook, faCog,faPlusSquare, faPencilAlt, faTrashAlt, faCommentDots, faEnvelope, faHandPaper, faBook, faUserEdit, faUndoAlt, faFile, faFolder, faDownload, faEllipsisH, faHistory, faChartPie, faMoon, faHiking, faSignOutAlt, faFilm, faFileAlt);\n\nNotiflix.Report.Init({\n  backgroundColor: '#222',\n  success: {\n      titleColor: '#bebebe',\n      messageColor: '#bebebe',\n      buttonColor: '#bebebe',\n  }\n})\n\n\n\nconst App=() =>{\n\n  const [allPublicadores,setAllPublicadores]= React.useState([])\n    const [allPublicos,setAllPublicos]= React.useState([])\n    const [allMedios, setAllMedios]= React.useState([])\n    const [allLetters, setAllLetters] = React.useState([])\n    const [showLogin, setShowLogin] =React.useState(false)\n    const [online, setOnline] = React.useState(false)\n\n    const refreshData = async (filtros)=>{\n      if (filtros==undefined) filtros={publicadores: true, publicos:true, medios:true, records:true}\n      if(currentDatabase!=null){\n        \n        if(window.localStorage.getItem(\"sessionToken\")!=undefined  && window.localStorage.getItem(\"sessionToken\")!=\"\"){\n          let response = await currentDatabase.initOnlineServer(window.localStorage.getItem(\"server\"), window.localStorage.getItem(\"sessionToken\"))\n          \n          if (response){\n            setOnline(true)\n              handleShowLogin(false)\n            }else{\n              handleShowLogin(true)\n            }\n          }else{\n            handleShowLogin(true)\n          }\n       if (filtros.publicadores){\n          let receivedPublicadores=await Publicador.getAllPublicadores()\n          setAllPublicadores(receivedPublicadores)\n       }\n       if (filtros.publicos){\n          let receivedPublicos=await Publico.getAllPublicos()\n          setAllPublicos(receivedPublicos)\n       }\n       if (filtros.medios){\n              \n       let receivedMedios= await Medio.getAllMedios()\n       setAllMedios(receivedMedios)\n       }\n       if (filtros.records){\n       let receivedLetters=await Record.getAllRecords()\n       setAllLetters(receivedLetters)\n       }\n       Notiflix.Loading.Remove()\n      }\n\n   }\n   \n   const handleServerLogin = async (server, token) =>{\n    const result= await currentDatabase.initOnlineServer(server,token)\n    if (result){\n      refreshData({publicadores: true, publicos:true, medios:true, records:true})\n      setOnline(true)\n    }\n}\nconst handleShowLogin = show=>{\n  setShowLogin(show)\n}\n\n\n\n\nReact.useEffect(() => {\n  Notiflix.Loading.Arrows('Cargando ambiente');\n  new Database(refreshData)\n  \n}, [])\n\n\n  \n\n\n    return (\n      \n        <div className=\"App\">\n          <ModalLogin show={showLogin} handleServerLogin={handleServerLogin} />\n            <Header  />\n            <RegistroContainer allLetters={allLetters} allPublicadores={allPublicadores} allPublicos={allPublicos} allMedios={allMedios} refreshData={refreshData} online={online} />\n        </div>\n      \n    )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}